/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./context/AuthContext.tsx":
/*!*********************************!*\
  !*** ./context/AuthContext.tsx ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/auth */ \"./utils/auth.ts\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/auth */ \"firebase/auth\");\n/* harmony import */ var _utils_firebase__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/firebase */ \"./utils/firebase.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_utils_auth__WEBPACK_IMPORTED_MODULE_2__, firebase_auth__WEBPACK_IMPORTED_MODULE_3__, _utils_firebase__WEBPACK_IMPORTED_MODULE_4__]);\n([_utils_auth__WEBPACK_IMPORTED_MODULE_2__, firebase_auth__WEBPACK_IMPORTED_MODULE_3__, _utils_firebase__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst useAuth = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (!context) {\n        throw new Error(\"useAuth must be used within an AuthProvider\");\n    }\n    return context;\n};\nconst AuthProvider = ({ children })=>{\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_3__.getAuth)(_utils_firebase__WEBPACK_IMPORTED_MODULE_4__.app);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Check if user is already logged in\n        const currentUser = (0,_utils_auth__WEBPACK_IMPORTED_MODULE_2__.getCurrentUser)();\n        setUser(currentUser);\n        // Set up Firebase auth state listener\n        const unsubscribe = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_3__.onAuthStateChanged)(auth, (firebaseUser)=>{\n            setIsLoading(true);\n            if (firebaseUser) {\n                // User is signed in - the localStorage will be updated by our auth utility\n                const storedUser = (0,_utils_auth__WEBPACK_IMPORTED_MODULE_2__.getCurrentUser)();\n                setUser(storedUser);\n            } else {\n                // User is signed out\n                setUser(null);\n            }\n            setIsLoading(false);\n        });\n        setIsLoading(false);\n        // Cleanup subscription\n        return ()=>unsubscribe();\n    }, [\n        auth\n    ]);\n    const handleLogin = async (email, password)=>{\n        setIsLoading(true);\n        try {\n            const result = await (0,_utils_auth__WEBPACK_IMPORTED_MODULE_2__.login)(email, password);\n            if (result.success && result.user) {\n                setUser(result.user);\n            }\n            setIsLoading(false);\n            return {\n                success: result.success,\n                message: result.message,\n                emailVerified: result.emailVerified\n            };\n        } catch (error) {\n            setIsLoading(false);\n            return {\n                success: false,\n                message: \"An error occurred during login\"\n            };\n        }\n    };\n    const handleRegister = async (name, email, password)=>{\n        setIsLoading(true);\n        try {\n            const result = await (0,_utils_auth__WEBPACK_IMPORTED_MODULE_2__.register)(name, email, password);\n            if (result.success && result.user) {\n                setUser(result.user);\n            }\n            setIsLoading(false);\n            return {\n                success: result.success,\n                message: result.message,\n                emailVerificationSent: result.emailVerificationSent\n            };\n        } catch (error) {\n            setIsLoading(false);\n            return {\n                success: false,\n                message: \"An error occurred during registration\"\n            };\n        }\n    };\n    const handleLogout = ()=>{\n        (0,_utils_auth__WEBPACK_IMPORTED_MODULE_2__.logout)();\n        setUser(null);\n        // Show notification\n        if (false) {}\n    };\n    const value = {\n        user,\n        isLoading,\n        isAuthenticated: !!user,\n        login: handleLogin,\n        register: handleRegister,\n        logout: handleLogout\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Projects\\\\Freelansing websites\\\\rangya-master\\\\context\\\\AuthContext.tsx\",\n        lineNumber: 127,\n        columnNumber: 10\n    }, undefined);\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb250ZXh0L0F1dGhDb250ZXh0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQThFO0FBRVc7QUFDN0I7QUFDcEI7QUFtQnhDLE1BQU1ZLDRCQUFjWCxvREFBYUEsQ0FBOEJZO0FBRXhELE1BQU1DLFVBQVU7SUFDckIsTUFBTUMsVUFBVWIsaURBQVVBLENBQUNVO0lBQzNCLElBQUksQ0FBQ0csU0FBUztRQUNaLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtJQUNBLE9BQU9EO0FBQ1QsRUFBRTtBQUVLLE1BQU1FLGVBQXdELENBQUMsRUFBRUMsUUFBUSxFQUFFO0lBQ2hGLE1BQU0sQ0FBQ0MsTUFBTUMsUUFBUSxHQUFHaEIsK0NBQVFBLENBQWM7SUFDOUMsTUFBTSxDQUFDaUIsV0FBV0MsYUFBYSxHQUFHbEIsK0NBQVFBLENBQUM7SUFDM0MsTUFBTW1CLE9BQU9kLHNEQUFPQSxDQUFDRSxnREFBR0E7SUFFeEJSLGdEQUFTQSxDQUFDO1FBQ1IscUNBQXFDO1FBQ3JDLE1BQU1xQixjQUFjbkIsMkRBQWNBO1FBQ2xDZSxRQUFRSTtRQUVSLHNDQUFzQztRQUN0QyxNQUFNQyxjQUFjZixpRUFBa0JBLENBQUNhLE1BQU0sQ0FBQ0c7WUFDNUNKLGFBQWE7WUFFYixJQUFJSSxjQUFjO2dCQUNoQiwyRUFBMkU7Z0JBQzNFLE1BQU1DLGFBQWF0QiwyREFBY0E7Z0JBQ2pDZSxRQUFRTztZQUNWLE9BQU87Z0JBQ0wscUJBQXFCO2dCQUNyQlAsUUFBUTtZQUNWO1lBRUFFLGFBQWE7UUFDZjtRQUVBQSxhQUFhO1FBRWIsdUJBQXVCO1FBQ3ZCLE9BQU8sSUFBTUc7SUFDZixHQUFHO1FBQUNGO0tBQUs7SUFFVCxNQUFNSyxjQUFjLE9BQU9DLE9BQWVDO1FBQ3hDUixhQUFhO1FBQ2IsSUFBSTtZQUNGLE1BQU1TLFNBQVMsTUFBTXpCLGtEQUFLQSxDQUFDdUIsT0FBT0M7WUFFbEMsSUFBSUMsT0FBT0MsT0FBTyxJQUFJRCxPQUFPWixJQUFJLEVBQUU7Z0JBQ2pDQyxRQUFRVyxPQUFPWixJQUFJO1lBQ3JCO1lBRUFHLGFBQWE7WUFDYixPQUFPO2dCQUNMVSxTQUFTRCxPQUFPQyxPQUFPO2dCQUN2QkMsU0FBU0YsT0FBT0UsT0FBTztnQkFDdkJDLGVBQWVILE9BQU9HLGFBQWE7WUFDckM7UUFDRixFQUFFLE9BQU9DLE9BQU87WUFDZGIsYUFBYTtZQUNiLE9BQU87Z0JBQUVVLFNBQVM7Z0JBQU9DLFNBQVM7WUFBaUM7UUFDckU7SUFDRjtJQUVBLE1BQU1HLGlCQUFpQixPQUFPQyxNQUFjUixPQUFlQztRQUN6RFIsYUFBYTtRQUNiLElBQUk7WUFDRixNQUFNUyxTQUFTLE1BQU12QixxREFBUUEsQ0FBQzZCLE1BQU1SLE9BQU9DO1lBRTNDLElBQUlDLE9BQU9DLE9BQU8sSUFBSUQsT0FBT1osSUFBSSxFQUFFO2dCQUNqQ0MsUUFBUVcsT0FBT1osSUFBSTtZQUNyQjtZQUVBRyxhQUFhO1lBQ2IsT0FBTztnQkFDTFUsU0FBU0QsT0FBT0MsT0FBTztnQkFDdkJDLFNBQVNGLE9BQU9FLE9BQU87Z0JBQ3ZCSyx1QkFBdUJQLE9BQU9PLHFCQUFxQjtZQUNyRDtRQUNGLEVBQUUsT0FBT0gsT0FBTztZQUNkYixhQUFhO1lBQ2IsT0FBTztnQkFBRVUsU0FBUztnQkFBT0MsU0FBUztZQUF3QztRQUM1RTtJQUNGO0lBRUEsTUFBTU0sZUFBZTtRQUNuQmhDLG1EQUFNQTtRQUNOYSxRQUFRO1FBRVIsb0JBQW9CO1FBQ3BCLElBQUksS0FBd0QsRUFBRSxFQUU3RDtJQUNIO0lBRUEsTUFBTXNCLFFBQXlCO1FBQzdCdkI7UUFDQUU7UUFDQXNCLGlCQUFpQixDQUFDLENBQUN4QjtRQUNuQmIsT0FBT3NCO1FBQ1BwQixVQUFVNEI7UUFDVjdCLFFBQVFnQztJQUNWO0lBRUEscUJBQU8sOERBQUMzQixZQUFZZ0MsUUFBUTtRQUFDRixPQUFPQTtrQkFBUXhCOzs7Ozs7QUFDOUMsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2plYW5zLW5leHRqcy8uL2NvbnRleHQvQXV0aENvbnRleHQudHN4P2ZkZmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBVc2VyIH0gZnJvbSAnLi4vZGF0YS90eXBlcyc7XG5pbXBvcnQgeyBnZXRDdXJyZW50VXNlciwgbG9naW4sIGxvZ291dCwgcmVnaXN0ZXIsIGlzQXV0aGVudGljYXRlZCB9IGZyb20gJy4uL3V0aWxzL2F1dGgnO1xuaW1wb3J0IHsgZ2V0QXV0aCwgb25BdXRoU3RhdGVDaGFuZ2VkIH0gZnJvbSAnZmlyZWJhc2UvYXV0aCc7XG5pbXBvcnQgeyBhcHAgfSBmcm9tICcuLi91dGlscy9maXJlYmFzZSc7XG5cbmludGVyZmFjZSBBdXRoQ29udGV4dFR5cGUge1xuICB1c2VyOiBVc2VyIHwgbnVsbDtcbiAgaXNMb2FkaW5nOiBib29sZWFuO1xuICBpc0F1dGhlbnRpY2F0ZWQ6IGJvb2xlYW47XG4gIGxvZ2luOiAoZW1haWw6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZykgPT4gUHJvbWlzZTx7IFxuICAgIHN1Y2Nlc3M6IGJvb2xlYW47IFxuICAgIG1lc3NhZ2U6IHN0cmluZztcbiAgICBlbWFpbFZlcmlmaWVkPzogYm9vbGVhbjtcbiAgfT47XG4gIHJlZ2lzdGVyOiAobmFtZTogc3RyaW5nLCBlbWFpbDogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nKSA9PiBQcm9taXNlPHsgXG4gICAgc3VjY2VzczogYm9vbGVhbjsgXG4gICAgbWVzc2FnZTogc3RyaW5nO1xuICAgIGVtYWlsVmVyaWZpY2F0aW9uU2VudD86IGJvb2xlYW47XG4gIH0+O1xuICBsb2dvdXQ6ICgpID0+IHZvaWQ7XG59XG5cbmNvbnN0IEF1dGhDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxBdXRoQ29udGV4dFR5cGUgfCB1bmRlZmluZWQ+KHVuZGVmaW5lZCk7XG5cbmV4cG9ydCBjb25zdCB1c2VBdXRoID0gKCkgPT4ge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChBdXRoQ29udGV4dCk7XG4gIGlmICghY29udGV4dCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndXNlQXV0aCBtdXN0IGJlIHVzZWQgd2l0aGluIGFuIEF1dGhQcm92aWRlcicpO1xuICB9XG4gIHJldHVybiBjb250ZXh0O1xufTtcblxuZXhwb3J0IGNvbnN0IEF1dGhQcm92aWRlcjogUmVhY3QuRkM8eyBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlIH0+ID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICBjb25zdCBbdXNlciwgc2V0VXNlcl0gPSB1c2VTdGF0ZTxVc2VyIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtpc0xvYWRpbmcsIHNldElzTG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcbiAgY29uc3QgYXV0aCA9IGdldEF1dGgoYXBwKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIENoZWNrIGlmIHVzZXIgaXMgYWxyZWFkeSBsb2dnZWQgaW5cbiAgICBjb25zdCBjdXJyZW50VXNlciA9IGdldEN1cnJlbnRVc2VyKCk7XG4gICAgc2V0VXNlcihjdXJyZW50VXNlcik7XG4gICAgXG4gICAgLy8gU2V0IHVwIEZpcmViYXNlIGF1dGggc3RhdGUgbGlzdGVuZXJcbiAgICBjb25zdCB1bnN1YnNjcmliZSA9IG9uQXV0aFN0YXRlQ2hhbmdlZChhdXRoLCAoZmlyZWJhc2VVc2VyKSA9PiB7XG4gICAgICBzZXRJc0xvYWRpbmcodHJ1ZSk7XG4gICAgICBcbiAgICAgIGlmIChmaXJlYmFzZVVzZXIpIHtcbiAgICAgICAgLy8gVXNlciBpcyBzaWduZWQgaW4gLSB0aGUgbG9jYWxTdG9yYWdlIHdpbGwgYmUgdXBkYXRlZCBieSBvdXIgYXV0aCB1dGlsaXR5XG4gICAgICAgIGNvbnN0IHN0b3JlZFVzZXIgPSBnZXRDdXJyZW50VXNlcigpO1xuICAgICAgICBzZXRVc2VyKHN0b3JlZFVzZXIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gVXNlciBpcyBzaWduZWQgb3V0XG4gICAgICAgIHNldFVzZXIobnVsbCk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XG4gICAgfSk7XG4gICAgXG4gICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICBcbiAgICAvLyBDbGVhbnVwIHN1YnNjcmlwdGlvblxuICAgIHJldHVybiAoKSA9PiB1bnN1YnNjcmliZSgpO1xuICB9LCBbYXV0aF0pO1xuXG4gIGNvbnN0IGhhbmRsZUxvZ2luID0gYXN5bmMgKGVtYWlsOiBzdHJpbmcsIHBhc3N3b3JkOiBzdHJpbmcpID0+IHtcbiAgICBzZXRJc0xvYWRpbmcodHJ1ZSk7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGxvZ2luKGVtYWlsLCBwYXNzd29yZCk7XG4gICAgICBcbiAgICAgIGlmIChyZXN1bHQuc3VjY2VzcyAmJiByZXN1bHQudXNlcikge1xuICAgICAgICBzZXRVc2VyKHJlc3VsdC51c2VyKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICAgIHJldHVybiB7IFxuICAgICAgICBzdWNjZXNzOiByZXN1bHQuc3VjY2VzcywgXG4gICAgICAgIG1lc3NhZ2U6IHJlc3VsdC5tZXNzYWdlLFxuICAgICAgICBlbWFpbFZlcmlmaWVkOiByZXN1bHQuZW1haWxWZXJpZmllZFxuICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiAnQW4gZXJyb3Igb2NjdXJyZWQgZHVyaW5nIGxvZ2luJyB9O1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVSZWdpc3RlciA9IGFzeW5jIChuYW1lOiBzdHJpbmcsIGVtYWlsOiBzdHJpbmcsIHBhc3N3b3JkOiBzdHJpbmcpID0+IHtcbiAgICBzZXRJc0xvYWRpbmcodHJ1ZSk7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlZ2lzdGVyKG5hbWUsIGVtYWlsLCBwYXNzd29yZCk7XG4gICAgICBcbiAgICAgIGlmIChyZXN1bHQuc3VjY2VzcyAmJiByZXN1bHQudXNlcikge1xuICAgICAgICBzZXRVc2VyKHJlc3VsdC51c2VyKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICAgIHJldHVybiB7IFxuICAgICAgICBzdWNjZXNzOiByZXN1bHQuc3VjY2VzcywgXG4gICAgICAgIG1lc3NhZ2U6IHJlc3VsdC5tZXNzYWdlLFxuICAgICAgICBlbWFpbFZlcmlmaWNhdGlvblNlbnQ6IHJlc3VsdC5lbWFpbFZlcmlmaWNhdGlvblNlbnRcbiAgICAgIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XG4gICAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogJ0FuIGVycm9yIG9jY3VycmVkIGR1cmluZyByZWdpc3RyYXRpb24nIH07XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUxvZ291dCA9ICgpID0+IHtcbiAgICBsb2dvdXQoKTtcbiAgICBzZXRVc2VyKG51bGwpO1xuICAgIFxuICAgIC8vIFNob3cgbm90aWZpY2F0aW9uXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5zaG93Tm90aWZpY2F0aW9uKSB7XG4gICAgICB3aW5kb3cuc2hvd05vdGlmaWNhdGlvbignWW91IGhhdmUgYmVlbiBsb2dnZWQgb3V0Jyk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IHZhbHVlOiBBdXRoQ29udGV4dFR5cGUgPSB7XG4gICAgdXNlcixcbiAgICBpc0xvYWRpbmcsXG4gICAgaXNBdXRoZW50aWNhdGVkOiAhIXVzZXIsXG4gICAgbG9naW46IGhhbmRsZUxvZ2luLFxuICAgIHJlZ2lzdGVyOiBoYW5kbGVSZWdpc3RlcixcbiAgICBsb2dvdXQ6IGhhbmRsZUxvZ291dFxuICB9O1xuXG4gIHJldHVybiA8QXV0aENvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3ZhbHVlfT57Y2hpbGRyZW59PC9BdXRoQ29udGV4dC5Qcm92aWRlcj47XG59OyAiXSwibmFtZXMiOlsiUmVhY3QiLCJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZVN0YXRlIiwiZ2V0Q3VycmVudFVzZXIiLCJsb2dpbiIsImxvZ291dCIsInJlZ2lzdGVyIiwiZ2V0QXV0aCIsIm9uQXV0aFN0YXRlQ2hhbmdlZCIsImFwcCIsIkF1dGhDb250ZXh0IiwidW5kZWZpbmVkIiwidXNlQXV0aCIsImNvbnRleHQiLCJFcnJvciIsIkF1dGhQcm92aWRlciIsImNoaWxkcmVuIiwidXNlciIsInNldFVzZXIiLCJpc0xvYWRpbmciLCJzZXRJc0xvYWRpbmciLCJhdXRoIiwiY3VycmVudFVzZXIiLCJ1bnN1YnNjcmliZSIsImZpcmViYXNlVXNlciIsInN0b3JlZFVzZXIiLCJoYW5kbGVMb2dpbiIsImVtYWlsIiwicGFzc3dvcmQiLCJyZXN1bHQiLCJzdWNjZXNzIiwibWVzc2FnZSIsImVtYWlsVmVyaWZpZWQiLCJlcnJvciIsImhhbmRsZVJlZ2lzdGVyIiwibmFtZSIsImVtYWlsVmVyaWZpY2F0aW9uU2VudCIsImhhbmRsZUxvZ291dCIsIndpbmRvdyIsInNob3dOb3RpZmljYXRpb24iLCJ2YWx1ZSIsImlzQXV0aGVudGljYXRlZCIsIlByb3ZpZGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./context/AuthContext.tsx\n");

/***/ }),

/***/ "./context/BannerContext.tsx":
/*!***********************************!*\
  !*** ./context/BannerContext.tsx ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BannerProvider: () => (/* binding */ BannerProvider),\n/* harmony export */   useBanners: () => (/* binding */ useBanners)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_firebaseBanners__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/firebaseBanners */ \"./utils/firebaseBanners.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_utils_firebaseBanners__WEBPACK_IMPORTED_MODULE_2__]);\n_utils_firebaseBanners__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nconst BannerContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction BannerProvider({ children }) {\n    const [banners, setBanners] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [lastRefreshed, setLastRefreshed] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(Date.now());\n    // Load banners from Firebase\n    const loadBanners = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        try {\n            setLoading(true);\n            const fetchedBanners = await (0,_utils_firebaseBanners__WEBPACK_IMPORTED_MODULE_2__.getAllBanners)();\n            setBanners(fetchedBanners);\n            setError(null);\n            setLastRefreshed(Date.now());\n        } catch (err) {\n            setError(err.message || \"Failed to load banners\");\n            console.error(\"Error loading banners:\", err);\n        } finally{\n            setLoading(false);\n        }\n    }, []);\n    // Load banners on initial render\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (false) {}\n    }, [\n        loadBanners\n    ]);\n    // Create a memoized cache for getBannersForPage\n    const bannersByPageCache = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const cache = {};\n        // Pre-populate cache with current banners\n        banners.forEach((banner)=>{\n            if (!cache[banner.page]) {\n                cache[banner.page] = [];\n            }\n            cache[banner.page].push(banner);\n        });\n        // Sort banners by order for each page\n        Object.keys(cache).forEach((page)=>{\n            cache[page].sort((a, b)=>a.order - b.order);\n        });\n        return cache;\n    }, [\n        banners,\n        lastRefreshed\n    ]);\n    // Get banners for a specific page (using cache when available)\n    const getBannersForPage = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (page)=>{\n        // Check cache first\n        if (bannersByPageCache[page]) {\n            return bannersByPageCache[page];\n        }\n        // If not in cache, get from Firebase\n        try {\n            const pageBanners = await (0,_utils_firebaseBanners__WEBPACK_IMPORTED_MODULE_2__.getBannersByPage)(page);\n            return pageBanners;\n        } catch (err) {\n            console.error(`Error getting banners for page ${page}:`, err);\n            return [];\n        }\n    }, [\n        bannersByPageCache\n    ]);\n    // Add a new banner\n    const addNewBanner = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (bannerData)=>{\n        try {\n            const newBanner = await (0,_utils_firebaseBanners__WEBPACK_IMPORTED_MODULE_2__.addBanner)(bannerData);\n            await loadBanners(); // Refresh the banners state\n            return newBanner;\n        } catch (err) {\n            setError(err.message || \"Failed to add banner\");\n            throw err;\n        }\n    }, [\n        loadBanners\n    ]);\n    // Update an existing banner\n    const updateExistingBanner = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (id, updates)=>{\n        try {\n            await (0,_utils_firebaseBanners__WEBPACK_IMPORTED_MODULE_2__.updateBanner)(id, updates);\n            await loadBanners(); // Refresh the banners state\n        } catch (err) {\n            setError(err.message || \"Failed to update banner\");\n            throw err;\n        }\n    }, [\n        loadBanners\n    ]);\n    // Remove a banner\n    const removeBanner = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (id)=>{\n        try {\n            await (0,_utils_firebaseBanners__WEBPACK_IMPORTED_MODULE_2__.deleteBanner)(id);\n            await loadBanners(); // Refresh the banners state\n        } catch (err) {\n            setError(err.message || \"Failed to delete banner\");\n            throw err;\n        }\n    }, [\n        loadBanners\n    ]);\n    // Refresh banners\n    const refreshBanners = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        await loadBanners();\n    }, [\n        loadBanners\n    ]);\n    // Memoize the context value to prevent unnecessary re-renders\n    const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>({\n            banners,\n            loading,\n            error,\n            getBannersForPage,\n            addNewBanner,\n            updateExistingBanner,\n            removeBanner,\n            refreshBanners\n        }), [\n        banners,\n        loading,\n        error,\n        getBannersForPage,\n        addNewBanner,\n        updateExistingBanner,\n        removeBanner,\n        refreshBanners\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(BannerContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Projects\\\\Freelansing websites\\\\rangya-master\\\\context\\\\BannerContext.tsx\",\n        lineNumber: 151,\n        columnNumber: 5\n    }, this);\n}\nconst useBanners = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(BannerContext);\n    if (context === undefined) {\n        throw new Error(\"useBanners must be used within a BannerProvider\");\n    }\n    return context;\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./context/BannerContext.tsx\n");

/***/ }),

/***/ "./context/CartContext.tsx":
/*!*********************************!*\
  !*** ./context/CartContext.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CartProvider: () => (/* binding */ CartProvider),\n/* harmony export */   useCart: () => (/* binding */ useCart)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst CartContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst useCart = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(CartContext);\n    if (!context) {\n        throw new Error(\"useCart must be used within a CartProvider\");\n    }\n    return context;\n};\nconst CartProvider = ({ children })=>{\n    const [cart, setCart] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [wishlist, setWishlist] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isInitialized, setIsInitialized] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    // Since useAuth uses useContext, we can't use it directly in CartProvider\n    // We'll check authentication in each function instead\n    // Load cart and wishlist from localStorage on initial render\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (false) {}\n    }, []);\n    // Save cart and wishlist to localStorage whenever they change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (isInitialized && \"undefined\" !== \"undefined\") {}\n    }, [\n        cart,\n        wishlist,\n        isInitialized\n    ]);\n    const addToCart = (product, quantity = 1, size, color)=>{\n        // Check if user is authenticated\n        if (false) {}\n        const selectedSize = size ?? (product.sizes && product.sizes.length > 0 ? product.sizes[0] : \"\");\n        const selectedColor = color || (product.colors ? product.colors[0] : undefined);\n        setCart((prevCart)=>{\n            // Check if product already exists in cart with same size and color\n            const existingItemIndex = prevCart.findIndex((item)=>item.product.id === product.id && item.size === selectedSize && (!item.color && !selectedColor || item.color?.code === selectedColor?.code));\n            if (existingItemIndex >= 0) {\n                // Update quantity of existing item\n                const updatedCart = [\n                    ...prevCart\n                ];\n                updatedCart[existingItemIndex].quantity += quantity;\n                // Show notification\n                if (false) {}\n                return updatedCart;\n            } else {\n                // Add new item to cart\n                const newItem = {\n                    product,\n                    quantity,\n                    size: selectedSize,\n                    color: selectedColor\n                };\n                // Show notification\n                if (false) {}\n                return [\n                    ...prevCart,\n                    newItem\n                ];\n            }\n        });\n        return true;\n    };\n    const removeFromCart = (productId)=>{\n        setCart((prevCart)=>{\n            const updatedCart = prevCart.filter((item)=>item.product.id !== productId);\n            // Show notification\n            if (false) {}\n            return updatedCart;\n        });\n    };\n    const updateCartItemQuantity = (productId, quantity)=>{\n        setCart((prevCart)=>{\n            const updatedCart = prevCart.map((item)=>item.product.id === productId ? {\n                    ...item,\n                    quantity: Math.max(1, quantity)\n                } : item);\n            return updatedCart;\n        });\n    };\n    const clearCart = ()=>{\n        setCart([]);\n        // Show notification\n        if (false) {}\n    };\n    const getCartTotal = ()=>{\n        return cart.reduce((total, item)=>total + item.product.price * item.quantity, 0);\n    };\n    const getCartCount = ()=>{\n        return cart.reduce((count, item)=>count + item.quantity, 0);\n    };\n    const toggleWishlist = (product)=>{\n        // Check if user is authenticated\n        if (false) {}\n        setWishlist((prevWishlist)=>{\n            const isInWishlist = prevWishlist.some((item)=>item.id === product.id);\n            if (isInWishlist) {\n                // Remove from wishlist\n                const updatedWishlist = prevWishlist.filter((item)=>item.id !== product.id);\n                // Show notification\n                if (false) {}\n                return updatedWishlist;\n            } else {\n                // Add to wishlist\n                // Show notification\n                if (false) {}\n                return [\n                    ...prevWishlist,\n                    product\n                ];\n            }\n        });\n        return true;\n    };\n    const isInWishlist = (productId)=>{\n        return wishlist.some((item)=>item.id === productId);\n    };\n    const value = {\n        cart,\n        wishlist,\n        addToCart,\n        removeFromCart,\n        updateCartItemQuantity,\n        clearCart,\n        getCartTotal,\n        getCartCount,\n        toggleWishlist,\n        isInWishlist\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CartContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Projects\\\\Freelansing websites\\\\rangya-master\\\\context\\\\CartContext.tsx\",\n        lineNumber: 247,\n        columnNumber: 10\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./context/CartContext.tsx\n");

/***/ }),

/***/ "./context/ProductContext.tsx":
/*!************************************!*\
  !*** ./context/ProductContext.tsx ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProductProvider: () => (/* binding */ ProductProvider),\n/* harmony export */   useProducts: () => (/* binding */ useProducts)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/firestore */ \"./utils/firestore.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_utils_firestore__WEBPACK_IMPORTED_MODULE_2__]);\n_utils_firestore__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nconst ProductContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst useProducts = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ProductContext);\n    if (!context) {\n        throw new Error(\"useProducts must be used within a ProductProvider\");\n    }\n    return context;\n};\nconst ProductProvider = ({ children })=>{\n    const [products, setProducts] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [categories, setCategories] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [productsByCategory, setProductsByCategory] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Organize products by category\n    const organizeProductsByCategory = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((allProducts)=>{\n        const byCategory = {};\n        allProducts.forEach((product)=>{\n            if (!product.category) return;\n            if (!byCategory[product.category]) {\n                byCategory[product.category] = [];\n            }\n            byCategory[product.category].push(product);\n        });\n        setProductsByCategory(byCategory);\n    }, []);\n    // Fetch all products from Firestore\n    const fetchProducts = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        try {\n            setLoading(true);\n            setError(null);\n            // Clear product cache to ensure fresh data\n            await _utils_firestore__WEBPACK_IMPORTED_MODULE_2__.clearProductCache();\n            // Get data from Firestore\n            console.log(\"Fetching products from Firestore in ProductContext\");\n            const fetchedProducts = await _utils_firestore__WEBPACK_IMPORTED_MODULE_2__.getAllProducts();\n            console.log(`Fetched ${fetchedProducts.length} products from Firestore`);\n            // Get categories from Firestore\n            // This is handled automatically by the Firestore API\n            setProducts(fetchedProducts);\n            organizeProductsByCategory(fetchedProducts);\n        } catch (err) {\n            console.error(\"Error fetching products:\", err);\n            setError(err.message || \"Failed to load products. Please try again later.\");\n        } finally{\n            setLoading(false);\n        }\n    }, [\n        organizeProductsByCategory\n    ]);\n    // Load products on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        fetchProducts();\n    }, [\n        fetchProducts\n    ]);\n    // Get products in a specific category\n    const getProductsInCategory = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((category)=>{\n        return productsByCategory[category] || [];\n    }, [\n        productsByCategory\n    ]);\n    // Add a new product\n    const addNewProduct = async (product)=>{\n        try {\n            setError(null);\n            // Ensure product has required fields\n            if (!product.category) {\n                throw new Error(\"Product category is required\");\n            }\n            // Add product to Firestore\n            const newProduct = await _utils_firestore__WEBPACK_IMPORTED_MODULE_2__.addProduct(product);\n            // Update local state\n            setProducts((prevProducts)=>[\n                    ...prevProducts,\n                    newProduct\n                ]);\n            // Update category cache\n            setProductsByCategory((prev)=>{\n                const updated = {\n                    ...prev\n                };\n                const category = product.category;\n                if (!updated[category]) {\n                    updated[category] = [];\n                }\n                updated[category] = [\n                    ...updated[category],\n                    newProduct\n                ];\n                return updated;\n            });\n            return newProduct;\n        } catch (err) {\n            console.error(\"Error adding product:\", err);\n            setError(err.message || \"Failed to add product\");\n            throw err;\n        }\n    };\n    // Update an existing product\n    const updateExistingProduct = async (id, updates)=>{\n        try {\n            setError(null);\n            // Find the existing product to check for category changes\n            const existingProduct = products.find((p)=>p.id === id);\n            if (!existingProduct) {\n                throw new Error(\"Product not found\");\n            }\n            // Update in Firestore\n            await _utils_firestore__WEBPACK_IMPORTED_MODULE_2__.updateProduct(id, updates);\n            // Get the updated product\n            const updatedProduct = {\n                ...existingProduct,\n                ...updates\n            };\n            // Update local state\n            setProducts((prevProducts)=>prevProducts.map((p)=>p.id === id ? updatedProduct : p));\n            // Handle category change if needed\n            if (updates.category && existingProduct.category !== updates.category) {\n                // Refetch products to ensure they're up to date\n                await fetchProducts();\n            } else {\n                // Just update the product in its existing category\n                setProductsByCategory((prev)=>{\n                    const category = existingProduct.category;\n                    if (category && prev[category]) {\n                        return {\n                            ...prev,\n                            [category]: prev[category].map((p)=>p.id === id ? updatedProduct : p)\n                        };\n                    }\n                    return prev;\n                });\n            }\n        } catch (err) {\n            console.error(\"Error updating product:\", err);\n            setError(err.message || \"Failed to update product\");\n            throw err;\n        }\n    };\n    // Remove a product\n    const removeProduct = async (id)=>{\n        try {\n            setError(null);\n            // Find the product to get its category\n            const productToRemove = products.find((p)=>p.id === id);\n            if (!productToRemove) {\n                throw new Error(\"Product not found\");\n            }\n            // Delete from Firestore\n            await _utils_firestore__WEBPACK_IMPORTED_MODULE_2__.deleteProduct(id);\n            // Update local state\n            setProducts((prevProducts)=>prevProducts.filter((p)=>p.id !== id));\n            // Update category cache\n            if (productToRemove.category) {\n                setProductsByCategory((prev)=>{\n                    const updated = {\n                        ...prev\n                    };\n                    if (updated[productToRemove.category]) {\n                        updated[productToRemove.category] = updated[productToRemove.category].filter((p)=>p.id !== id);\n                        // Remove category array if empty\n                        if (updated[productToRemove.category].length === 0) {\n                            delete updated[productToRemove.category];\n                        }\n                    }\n                    return updated;\n                });\n            }\n        } catch (err) {\n            console.error(\"Error removing product:\", err);\n            setError(err.message || \"Failed to delete product\");\n            throw err;\n        }\n    };\n    // Upload an image to Firebase Storage\n    const uploadImage = async (file)=>{\n        try {\n            setError(null);\n            return await _utils_firestore__WEBPACK_IMPORTED_MODULE_2__.uploadProductImage(file);\n        } catch (err) {\n            console.error(\"Error uploading image:\", err);\n            setError(err.message || \"Failed to upload image\");\n            throw err;\n        }\n    };\n    // Manual refresh function\n    const refreshProducts = async ()=>{\n        await fetchProducts();\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ProductContext.Provider, {\n        value: {\n            products,\n            categories,\n            productsByCategory,\n            loading,\n            error,\n            addNewProduct,\n            updateExistingProduct,\n            removeProduct,\n            uploadImage,\n            refreshProducts,\n            getProductsInCategory\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Projects\\\\Freelansing websites\\\\rangya-master\\\\context\\\\ProductContext.tsx\",\n        lineNumber: 235,\n        columnNumber: 5\n    }, undefined);\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./context/ProductContext.tsx\n");

/***/ }),

/***/ "./data/products.ts":
/*!**************************!*\
  !*** ./data/products.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getFeaturedProducts: () => (/* binding */ getFeaturedProducts),\n/* harmony export */   getNewProducts: () => (/* binding */ getNewProducts),\n/* harmony export */   getProductById: () => (/* binding */ getProductById),\n/* harmony export */   getProductsByCategory: () => (/* binding */ getProductsByCategory),\n/* harmony export */   getProductsBySubcategory: () => (/* binding */ getProductsBySubcategory),\n/* harmony export */   getRelatedProducts: () => (/* binding */ getRelatedProducts),\n/* harmony export */   products: () => (/* binding */ products),\n/* harmony export */   searchProducts: () => (/* binding */ searchProducts)\n/* harmony export */ });\n// Empty product data - all demo products removed\nconst products = [];\n// Helper functions to filter products\nconst getFeaturedProducts = ()=>{\n    return products.filter((product)=>product.featured);\n};\nconst getNewProducts = ()=>{\n    return products.filter((product)=>product.new);\n};\nconst getProductsByCategory = (category)=>{\n    return products.filter((product)=>product.category === category);\n};\nconst getProductsBySubcategory = (subcategory)=>{\n    return products.filter((product)=>product.subcategory === subcategory);\n};\nconst getProductById = (id)=>{\n    return products.find((product)=>product.id === id);\n};\nconst getRelatedProducts = (product, limit = 4)=>{\n    return products.filter((p)=>p.id !== product.id && (p.category === product.category || p.subcategory === product.subcategory)).slice(0, limit);\n};\nconst searchProducts = (query)=>{\n    const searchTerm = query.toLowerCase();\n    return products.filter((product)=>product.name.toLowerCase().includes(searchTerm) || product.description.toLowerCase().includes(searchTerm) || product.category.toLowerCase().includes(searchTerm) || product.subcategory && product.subcategory.toLowerCase().includes(searchTerm) || product.tags && product.tags.some((tag)=>tag.toLowerCase().includes(searchTerm)));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kYXRhL3Byb2R1Y3RzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBOEJBLGlEQUFpRDtBQUMxQyxNQUFNQSxXQUFzQixFQUFFLENBQUM7QUFFdEMsc0NBQXNDO0FBQy9CLE1BQU1DLHNCQUFzQjtJQUNqQyxPQUFPRCxTQUFTRSxNQUFNLENBQUNDLENBQUFBLFVBQVdBLFFBQVFDLFFBQVE7QUFDcEQsRUFBRTtBQUVLLE1BQU1DLGlCQUFpQjtJQUM1QixPQUFPTCxTQUFTRSxNQUFNLENBQUNDLENBQUFBLFVBQVdBLFFBQVFHLEdBQUc7QUFDL0MsRUFBRTtBQUVLLE1BQU1DLHdCQUF3QixDQUFDQztJQUNwQyxPQUFPUixTQUFTRSxNQUFNLENBQUNDLENBQUFBLFVBQVdBLFFBQVFLLFFBQVEsS0FBS0E7QUFDekQsRUFBRTtBQUVLLE1BQU1DLDJCQUEyQixDQUFDQztJQUN2QyxPQUFPVixTQUFTRSxNQUFNLENBQUNDLENBQUFBLFVBQVdBLFFBQVFPLFdBQVcsS0FBS0E7QUFDNUQsRUFBRTtBQUVLLE1BQU1DLGlCQUFpQixDQUFDQztJQUM3QixPQUFPWixTQUFTYSxJQUFJLENBQUNWLENBQUFBLFVBQVdBLFFBQVFTLEVBQUUsS0FBS0E7QUFDakQsRUFBRTtBQUVLLE1BQU1FLHFCQUFxQixDQUFDWCxTQUFrQlksUUFBUSxDQUFDO0lBQzVELE9BQU9mLFNBQ0pFLE1BQU0sQ0FBQ2MsQ0FBQUEsSUFDTkEsRUFBRUosRUFBRSxLQUFLVCxRQUFRUyxFQUFFLElBQ2xCSSxDQUFBQSxFQUFFUixRQUFRLEtBQUtMLFFBQVFLLFFBQVEsSUFBSVEsRUFBRU4sV0FBVyxLQUFLUCxRQUFRTyxXQUFXLEdBRTFFTyxLQUFLLENBQUMsR0FBR0Y7QUFDZCxFQUFFO0FBRUssTUFBTUcsaUJBQWlCLENBQUNDO0lBQzdCLE1BQU1DLGFBQWFELE1BQU1FLFdBQVc7SUFDcEMsT0FBT3JCLFNBQVNFLE1BQU0sQ0FBQ0MsQ0FBQUEsVUFDckJBLFFBQVFtQixJQUFJLENBQUNELFdBQVcsR0FBR0UsUUFBUSxDQUFDSCxlQUNwQ2pCLFFBQVFxQixXQUFXLENBQUNILFdBQVcsR0FBR0UsUUFBUSxDQUFDSCxlQUMzQ2pCLFFBQVFLLFFBQVEsQ0FBQ2EsV0FBVyxHQUFHRSxRQUFRLENBQUNILGVBQ3ZDakIsUUFBUU8sV0FBVyxJQUFJUCxRQUFRTyxXQUFXLENBQUNXLFdBQVcsR0FBR0UsUUFBUSxDQUFDSCxlQUNsRWpCLFFBQVFzQixJQUFJLElBQUl0QixRQUFRc0IsSUFBSSxDQUFDQyxJQUFJLENBQUNDLENBQUFBLE1BQU9BLElBQUlOLFdBQVcsR0FBR0UsUUFBUSxDQUFDSDtBQUV6RSxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamVhbnMtbmV4dGpzLy4vZGF0YS9wcm9kdWN0cy50cz8wOWNlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgUHJvZHVjdCB7XG4gIGlkOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgbG9uZ0Rlc2NyaXB0aW9uPzogc3RyaW5nO1xuICBwcmljZTogbnVtYmVyO1xuICBvcmlnaW5hbFByaWNlPzogbnVtYmVyO1xuICBjYXRlZ29yeTogc3RyaW5nO1xuICBzdWJjYXRlZ29yeT86IHN0cmluZztcbiAgaW1hZ2U6IHN0cmluZztcbiAgZ2FsbGVyeT86IHN0cmluZ1tdO1xuICBmZWF0dXJlZDogYm9vbGVhbjtcbiAgbmV3OiBib29sZWFuO1xuICBzdG9jazogbnVtYmVyO1xuICBkaXNjb3VudD86IG51bWJlcjtcbiAgcmF0aW5nPzogbnVtYmVyO1xuICByZXZpZXdzPzogbnVtYmVyO1xuICBzaXplcz86IHN0cmluZ1tdO1xuICBjb2xvcnM/OiB7IG5hbWU6IHN0cmluZzsgY29kZTogc3RyaW5nIH1bXTtcbiAgdGFncz86IHN0cmluZ1tdO1xuICBza3U/OiBzdHJpbmc7XG4gIGJyYW5kPzogc3RyaW5nO1xuICBtYXRlcmlhbD86IHN0cmluZztcbiAgZml0Pzogc3RyaW5nO1xuICBjYXJlSW5zdHJ1Y3Rpb25zPzogc3RyaW5nO1xuICBjb3VudHJ5T2ZPcmlnaW4/OiBzdHJpbmc7XG4gIGNyZWF0ZWRBdD86IHN0cmluZztcbiAgdXBkYXRlZEF0Pzogc3RyaW5nO1xufVxuXG4vLyBFbXB0eSBwcm9kdWN0IGRhdGEgLSBhbGwgZGVtbyBwcm9kdWN0cyByZW1vdmVkXG5leHBvcnQgY29uc3QgcHJvZHVjdHM6IFByb2R1Y3RbXSA9IFtdO1xuXG4vLyBIZWxwZXIgZnVuY3Rpb25zIHRvIGZpbHRlciBwcm9kdWN0c1xuZXhwb3J0IGNvbnN0IGdldEZlYXR1cmVkUHJvZHVjdHMgPSAoKTogUHJvZHVjdFtdID0+IHtcbiAgcmV0dXJuIHByb2R1Y3RzLmZpbHRlcihwcm9kdWN0ID0+IHByb2R1Y3QuZmVhdHVyZWQpO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldE5ld1Byb2R1Y3RzID0gKCk6IFByb2R1Y3RbXSA9PiB7XG4gIHJldHVybiBwcm9kdWN0cy5maWx0ZXIocHJvZHVjdCA9PiBwcm9kdWN0Lm5ldyk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UHJvZHVjdHNCeUNhdGVnb3J5ID0gKGNhdGVnb3J5OiBzdHJpbmcpOiBQcm9kdWN0W10gPT4ge1xuICByZXR1cm4gcHJvZHVjdHMuZmlsdGVyKHByb2R1Y3QgPT4gcHJvZHVjdC5jYXRlZ29yeSA9PT0gY2F0ZWdvcnkpO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFByb2R1Y3RzQnlTdWJjYXRlZ29yeSA9IChzdWJjYXRlZ29yeTogc3RyaW5nKTogUHJvZHVjdFtdID0+IHtcbiAgcmV0dXJuIHByb2R1Y3RzLmZpbHRlcihwcm9kdWN0ID0+IHByb2R1Y3Quc3ViY2F0ZWdvcnkgPT09IHN1YmNhdGVnb3J5KTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRQcm9kdWN0QnlJZCA9IChpZDogc3RyaW5nKTogUHJvZHVjdCB8IHVuZGVmaW5lZCA9PiB7XG4gIHJldHVybiBwcm9kdWN0cy5maW5kKHByb2R1Y3QgPT4gcHJvZHVjdC5pZCA9PT0gaWQpO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFJlbGF0ZWRQcm9kdWN0cyA9IChwcm9kdWN0OiBQcm9kdWN0LCBsaW1pdCA9IDQpOiBQcm9kdWN0W10gPT4ge1xuICByZXR1cm4gcHJvZHVjdHNcbiAgICAuZmlsdGVyKHAgPT4gXG4gICAgICBwLmlkICE9PSBwcm9kdWN0LmlkICYmIFxuICAgICAgKHAuY2F0ZWdvcnkgPT09IHByb2R1Y3QuY2F0ZWdvcnkgfHwgcC5zdWJjYXRlZ29yeSA9PT0gcHJvZHVjdC5zdWJjYXRlZ29yeSlcbiAgICApXG4gICAgLnNsaWNlKDAsIGxpbWl0KTtcbn07XG5cbmV4cG9ydCBjb25zdCBzZWFyY2hQcm9kdWN0cyA9IChxdWVyeTogc3RyaW5nKTogUHJvZHVjdFtdID0+IHtcbiAgY29uc3Qgc2VhcmNoVGVybSA9IHF1ZXJ5LnRvTG93ZXJDYXNlKCk7XG4gIHJldHVybiBwcm9kdWN0cy5maWx0ZXIocHJvZHVjdCA9PiBcbiAgICBwcm9kdWN0Lm5hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hUZXJtKSB8fFxuICAgIHByb2R1Y3QuZGVzY3JpcHRpb24udG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hUZXJtKSB8fFxuICAgIHByb2R1Y3QuY2F0ZWdvcnkudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hUZXJtKSB8fFxuICAgIChwcm9kdWN0LnN1YmNhdGVnb3J5ICYmIHByb2R1Y3Quc3ViY2F0ZWdvcnkudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hUZXJtKSkgfHxcbiAgICAocHJvZHVjdC50YWdzICYmIHByb2R1Y3QudGFncy5zb21lKHRhZyA9PiB0YWcudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hUZXJtKSkpXG4gICk7XG59OyAiXSwibmFtZXMiOlsicHJvZHVjdHMiLCJnZXRGZWF0dXJlZFByb2R1Y3RzIiwiZmlsdGVyIiwicHJvZHVjdCIsImZlYXR1cmVkIiwiZ2V0TmV3UHJvZHVjdHMiLCJuZXciLCJnZXRQcm9kdWN0c0J5Q2F0ZWdvcnkiLCJjYXRlZ29yeSIsImdldFByb2R1Y3RzQnlTdWJjYXRlZ29yeSIsInN1YmNhdGVnb3J5IiwiZ2V0UHJvZHVjdEJ5SWQiLCJpZCIsImZpbmQiLCJnZXRSZWxhdGVkUHJvZHVjdHMiLCJsaW1pdCIsInAiLCJzbGljZSIsInNlYXJjaFByb2R1Y3RzIiwicXVlcnkiLCJzZWFyY2hUZXJtIiwidG9Mb3dlckNhc2UiLCJuYW1lIiwiaW5jbHVkZXMiLCJkZXNjcmlwdGlvbiIsInRhZ3MiLCJzb21lIiwidGFnIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./data/products.ts\n");

/***/ }),

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _styles_animations_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styles/animations.css */ \"./styles/animations.css\");\n/* harmony import */ var _styles_animations_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_animations_css__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _styles_MobileEnhancements_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../styles/MobileEnhancements.css */ \"./styles/MobileEnhancements.css\");\n/* harmony import */ var _styles_MobileEnhancements_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_styles_MobileEnhancements_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _context_AuthContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../context/AuthContext */ \"./context/AuthContext.tsx\");\n/* harmony import */ var _context_ProductContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../context/ProductContext */ \"./context/ProductContext.tsx\");\n/* harmony import */ var _context_CartContext__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../context/CartContext */ \"./context/CartContext.tsx\");\n/* harmony import */ var _context_BannerContext__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../context/BannerContext */ \"./context/BannerContext.tsx\");\n/* harmony import */ var _data_products__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../data/products */ \"./data/products.ts\");\n/* harmony import */ var _utils_animation__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils/animation */ \"./utils/animation.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_context_AuthContext__WEBPACK_IMPORTED_MODULE_6__, _context_ProductContext__WEBPACK_IMPORTED_MODULE_7__, _context_BannerContext__WEBPACK_IMPORTED_MODULE_9__]);\n([_context_AuthContext__WEBPACK_IMPORTED_MODULE_6__, _context_ProductContext__WEBPACK_IMPORTED_MODULE_7__, _context_BannerContext__WEBPACK_IMPORTED_MODULE_9__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n\n\n\nfunction initializeLocalStorage() {\n    if (false) {}\n}\nfunction MyApp({ Component, pageProps }) {\n    const [mounted, setMounted] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false);\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_5__.useRouter)();\n    // Initialize localStorage and set mounted state\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(()=>{\n        initializeLocalStorage();\n        setMounted(true);\n        // Initialize scroll animations\n        const observer = (0,_utils_animation__WEBPACK_IMPORTED_MODULE_11__.initScrollAnimations)();\n        // Re-initialize on route changes\n        const handleRouteChange = ()=>{\n            setTimeout(()=>{\n                (0,_utils_animation__WEBPACK_IMPORTED_MODULE_11__.refreshAnimations)();\n            }, 100);\n        };\n        router.events.on(\"routeChangeComplete\", handleRouteChange);\n        // Clean up observer on component unmount\n        return ()=>{\n            if (observer) {\n                observer.disconnect();\n            }\n            router.events.off(\"routeChangeComplete\", handleRouteChange);\n        };\n    }, [\n        router.events\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        suppressHydrationWarning: true,\n        className: \"page-transition\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_AuthContext__WEBPACK_IMPORTED_MODULE_6__.AuthProvider, {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_ProductContext__WEBPACK_IMPORTED_MODULE_7__.ProductProvider, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_CartContext__WEBPACK_IMPORTED_MODULE_8__.CartProvider, {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_BannerContext__WEBPACK_IMPORTED_MODULE_9__.BannerProvider, {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                            ...pageProps\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Projects\\\\Freelansing websites\\\\rangya-master\\\\pages\\\\_app.tsx\",\n                            lineNumber: 128,\n                            columnNumber: 15\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Projects\\\\Freelansing websites\\\\rangya-master\\\\pages\\\\_app.tsx\",\n                        lineNumber: 127,\n                        columnNumber: 13\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Projects\\\\Freelansing websites\\\\rangya-master\\\\pages\\\\_app.tsx\",\n                    lineNumber: 126,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Projects\\\\Freelansing websites\\\\rangya-master\\\\pages\\\\_app.tsx\",\n                lineNumber: 125,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Projects\\\\Freelansing websites\\\\rangya-master\\\\pages\\\\_app.tsx\",\n            lineNumber: 124,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Projects\\\\Freelansing websites\\\\rangya-master\\\\pages\\\\_app.tsx\",\n        lineNumber: 123,\n        columnNumber: 5\n    }, this);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MyApp);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUErQjtBQUNHO0FBQ1E7QUFFRTtBQUNKO0FBQ2M7QUFDTTtBQUNOO0FBQ0k7QUFDZDtBQUNpQztBQUU3RSxTQUFTVTtJQUNQLElBQUksS0FBa0IsRUFBYSxFQTBFbEM7QUFDSDtBQUVBLFNBQVNpQyxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFZO0lBQy9DLE1BQU0sQ0FBQ0MsU0FBU0MsV0FBVyxHQUFHL0MsK0NBQVFBLENBQUM7SUFDdkMsTUFBTWdELFNBQVM5QyxzREFBU0E7SUFFeEIsZ0RBQWdEO0lBQ2hERCxnREFBU0EsQ0FBQztRQUNSUztRQUNBcUMsV0FBVztRQUVYLCtCQUErQjtRQUMvQixNQUFNRSxXQUFXekMsdUVBQW9CQTtRQUVyQyxpQ0FBaUM7UUFDakMsTUFBTTBDLG9CQUFvQjtZQUN4QkMsV0FBVztnQkFDVDFDLG9FQUFpQkE7WUFDbkIsR0FBRztRQUNMO1FBRUF1QyxPQUFPSSxNQUFNLENBQUNDLEVBQUUsQ0FBQyx1QkFBdUJIO1FBRXhDLHlDQUF5QztRQUN6QyxPQUFPO1lBQ0wsSUFBSUQsVUFBVTtnQkFDWkEsU0FBU0ssVUFBVTtZQUNyQjtZQUNBTixPQUFPSSxNQUFNLENBQUNHLEdBQUcsQ0FBQyx1QkFBdUJMO1FBQzNDO0lBQ0YsR0FBRztRQUFDRixPQUFPSSxNQUFNO0tBQUM7SUFFbEIscUJBQ0UsOERBQUNJO1FBQUlDLHdCQUF3QjtRQUFDQyxXQUFVO2tCQUN0Qyw0RUFBQ3ZELDhEQUFZQTtzQkFDWCw0RUFBQ0Msb0VBQWVBOzBCQUNkLDRFQUFDQyw4REFBWUE7OEJBQ1gsNEVBQUNDLGtFQUFjQTtrQ0FDYiw0RUFBQ3NDOzRCQUFXLEdBQUdDLFNBQVM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPdEM7QUFFQSxpRUFBZUYsS0FBS0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2plYW5zLW5leHRqcy8uL3BhZ2VzL19hcHAudHN4PzJmYmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuLi9zdHlsZXMvZ2xvYmFscy5jc3MnO1xuaW1wb3J0ICcuLi9zdHlsZXMvYW5pbWF0aW9ucy5jc3MnO1xuaW1wb3J0ICcuLi9zdHlsZXMvTW9iaWxlRW5oYW5jZW1lbnRzLmNzcyc7XG5pbXBvcnQgdHlwZSB7IEFwcFByb3BzIH0gZnJvbSAnbmV4dC9hcHAnO1xuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gJ25leHQvcm91dGVyJztcbmltcG9ydCB7IEF1dGhQcm92aWRlciB9IGZyb20gJy4uL2NvbnRleHQvQXV0aENvbnRleHQnO1xuaW1wb3J0IHsgUHJvZHVjdFByb3ZpZGVyIH0gZnJvbSAnLi4vY29udGV4dC9Qcm9kdWN0Q29udGV4dCc7XG5pbXBvcnQgeyBDYXJ0UHJvdmlkZXIgfSBmcm9tICcuLi9jb250ZXh0L0NhcnRDb250ZXh0JztcbmltcG9ydCB7IEJhbm5lclByb3ZpZGVyIH0gZnJvbSAnLi4vY29udGV4dC9CYW5uZXJDb250ZXh0JztcbmltcG9ydCB7IHByb2R1Y3RzIH0gZnJvbSAnLi4vZGF0YS9wcm9kdWN0cyc7XG5pbXBvcnQgeyBpbml0U2Nyb2xsQW5pbWF0aW9ucywgcmVmcmVzaEFuaW1hdGlvbnMgfSBmcm9tICcuLi91dGlscy9hbmltYXRpb24nO1xuXG5mdW5jdGlvbiBpbml0aWFsaXplTG9jYWxTdG9yYWdlKCkge1xuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAvLyBDaGVjayBpZiBwcm9kdWN0cyBleGlzdCBpbiBsb2NhbFN0b3JhZ2VcbiAgICBpZiAoIWxvY2FsU3RvcmFnZS5nZXRJdGVtKCdyYW5neWFfcHJvZHVjdHMnKSkge1xuICAgICAgLy8gSW5pdGlhbGl6ZSB3aXRoIHNhbXBsZSBwcm9kdWN0c1xuICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpO1xuICAgICAgY29uc3QgaW5pdGlhbFByb2R1Y3RzID0gcHJvZHVjdHMubWFwKHByb2R1Y3QgPT4gKHtcbiAgICAgICAgLi4ucHJvZHVjdCxcbiAgICAgICAgY3JlYXRlZEF0OiBub3csXG4gICAgICAgIHVwZGF0ZWRBdDogbm93XG4gICAgICB9KSk7XG4gICAgICBcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdyYW5neWFfcHJvZHVjdHMnLCBKU09OLnN0cmluZ2lmeShpbml0aWFsUHJvZHVjdHMpKTtcbiAgICAgIFxuICAgICAgLy8gSW5pdGlhbGl6ZSBjYXRlZ29yaWVzIGZyb20gcHJvZHVjdHNcbiAgICAgIGNvbnN0IGNhdGVnb3J5Q291bnRzOiBSZWNvcmQ8c3RyaW5nLCBudW1iZXI+ID0ge307XG4gICAgICBwcm9kdWN0cy5mb3JFYWNoKHByb2R1Y3QgPT4ge1xuICAgICAgICBpZiAocHJvZHVjdC5jYXRlZ29yeSkge1xuICAgICAgICAgIGNhdGVnb3J5Q291bnRzW3Byb2R1Y3QuY2F0ZWdvcnldID0gKGNhdGVnb3J5Q291bnRzW3Byb2R1Y3QuY2F0ZWdvcnldIHx8IDApICsgMTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIGNvbnN0IGNhdGVnb3JpZXMgPSBPYmplY3QuZW50cmllcyhjYXRlZ29yeUNvdW50cykubWFwKChbaWQsIGNvdW50XSkgPT4gKHtcbiAgICAgICAgaWQsXG4gICAgICAgIG5hbWU6IGlkLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgaWQuc2xpY2UoMSksIC8vIENhcGl0YWxpemUgZmlyc3QgbGV0dGVyXG4gICAgICAgIGNvdW50LFxuICAgICAgICBjcmVhdGVkQXQ6IG5vdyxcbiAgICAgICAgdXBkYXRlZEF0OiBub3dcbiAgICAgIH0pKTtcbiAgICAgIFxuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Jhbmd5YV9jYXRlZ29yaWVzJywgSlNPTi5zdHJpbmdpZnkoY2F0ZWdvcmllcykpO1xuICAgIH1cblxuICAgIC8vIEluaXRpYWxpemUgYmFubmVycyBpZiB0aGV5IGRvbid0IGV4aXN0XG4gICAgaWYgKCFsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncmFuZ3lhX2Jhbm5lcnMnKSkge1xuICAgICAgLy8gRGVmYXVsdCBob21lIHBhZ2UgYmFubmVyc1xuICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpO1xuICAgICAgY29uc3QgaW5pdGlhbEJhbm5lcnMgPSBbXG4gICAgICAgIHtcbiAgICAgICAgICBpZDogJ2Jhbm5lcjEnLFxuICAgICAgICAgIHBhZ2U6ICdob21lJyxcbiAgICAgICAgICBpbWFnZVVybDogJycsIC8vIEVtcHR5IGJ5IGRlZmF1bHQgLSB0byBiZSBzZXQgYnkgYWRtaW5cbiAgICAgICAgICB0aXRsZTogJ01lblxcJ3MgQ29sbGVjdGlvbicsXG4gICAgICAgICAgc3VidGl0bGU6ICdFeHBsb3JlIG91ciBsYXRlc3QgbWVuXFwncyBzdHlsZXMnLFxuICAgICAgICAgIHRleHRDb2xvcjogJyNmZmZmZmYnLFxuICAgICAgICAgIG9yZGVyOiAxLFxuICAgICAgICAgIGNyZWF0ZWRBdDogbm93LFxuICAgICAgICAgIHVwZGF0ZWRBdDogbm93XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBpZDogJ2Jhbm5lcjInLFxuICAgICAgICAgIHBhZ2U6ICdob21lJyxcbiAgICAgICAgICBpbWFnZVVybDogJycsIC8vIEVtcHR5IGJ5IGRlZmF1bHQgLSB0byBiZSBzZXQgYnkgYWRtaW5cbiAgICAgICAgICB0aXRsZTogJ1ByZW1pdW0gRGVuaW0nLFxuICAgICAgICAgIHN1YnRpdGxlOiAnUXVhbGl0eSBqZWFucyBmb3IgZXZlcnkgb2NjYXNpb24nLFxuICAgICAgICAgIHRleHRDb2xvcjogJyNmZmZmZmYnLFxuICAgICAgICAgIG9yZGVyOiAyLFxuICAgICAgICAgIGNyZWF0ZWRBdDogbm93LFxuICAgICAgICAgIHVwZGF0ZWRBdDogbm93XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBpZDogJ2Jhbm5lcjMnLFxuICAgICAgICAgIHBhZ2U6ICdob21lJyxcbiAgICAgICAgICBpbWFnZVVybDogJycsIC8vIEVtcHR5IGJ5IGRlZmF1bHQgLSB0byBiZSBzZXQgYnkgYWRtaW5cbiAgICAgICAgICB0aXRsZTogJ0FjY2Vzc29yaWVzJyxcbiAgICAgICAgICBzdWJ0aXRsZTogJ0NvbXBsZXRlIHlvdXIgbG9vaycsXG4gICAgICAgICAgdGV4dENvbG9yOiAnI2ZmZmZmZicsXG4gICAgICAgICAgb3JkZXI6IDMsXG4gICAgICAgICAgY3JlYXRlZEF0OiBub3csXG4gICAgICAgICAgdXBkYXRlZEF0OiBub3dcbiAgICAgICAgfVxuICAgICAgXTtcbiAgICAgIFxuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Jhbmd5YV9iYW5uZXJzJywgSlNPTi5zdHJpbmdpZnkoaW5pdGlhbEJhbm5lcnMpKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gTXlBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9OiBBcHBQcm9wcykge1xuICBjb25zdCBbbW91bnRlZCwgc2V0TW91bnRlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xuXG4gIC8vIEluaXRpYWxpemUgbG9jYWxTdG9yYWdlIGFuZCBzZXQgbW91bnRlZCBzdGF0ZVxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGluaXRpYWxpemVMb2NhbFN0b3JhZ2UoKTtcbiAgICBzZXRNb3VudGVkKHRydWUpO1xuICAgIFxuICAgIC8vIEluaXRpYWxpemUgc2Nyb2xsIGFuaW1hdGlvbnNcbiAgICBjb25zdCBvYnNlcnZlciA9IGluaXRTY3JvbGxBbmltYXRpb25zKCk7XG4gICAgXG4gICAgLy8gUmUtaW5pdGlhbGl6ZSBvbiByb3V0ZSBjaGFuZ2VzXG4gICAgY29uc3QgaGFuZGxlUm91dGVDaGFuZ2UgPSAoKSA9PiB7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgcmVmcmVzaEFuaW1hdGlvbnMoKTtcbiAgICAgIH0sIDEwMCk7XG4gICAgfTtcbiAgICBcbiAgICByb3V0ZXIuZXZlbnRzLm9uKCdyb3V0ZUNoYW5nZUNvbXBsZXRlJywgaGFuZGxlUm91dGVDaGFuZ2UpO1xuICAgIFxuICAgIC8vIENsZWFuIHVwIG9ic2VydmVyIG9uIGNvbXBvbmVudCB1bm1vdW50XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGlmIChvYnNlcnZlcikge1xuICAgICAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7XG4gICAgICB9XG4gICAgICByb3V0ZXIuZXZlbnRzLm9mZigncm91dGVDaGFuZ2VDb21wbGV0ZScsIGhhbmRsZVJvdXRlQ2hhbmdlKTtcbiAgICB9O1xuICB9LCBbcm91dGVyLmV2ZW50c10pO1xuICBcbiAgcmV0dXJuIChcbiAgICA8ZGl2IHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBjbGFzc05hbWU9XCJwYWdlLXRyYW5zaXRpb25cIj5cbiAgICAgIDxBdXRoUHJvdmlkZXI+XG4gICAgICAgIDxQcm9kdWN0UHJvdmlkZXI+XG4gICAgICAgICAgPENhcnRQcm92aWRlcj5cbiAgICAgICAgICAgIDxCYW5uZXJQcm92aWRlcj5cbiAgICAgICAgICAgICAgPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPlxuICAgICAgICAgICAgPC9CYW5uZXJQcm92aWRlcj5cbiAgICAgICAgICA8L0NhcnRQcm92aWRlcj5cbiAgICAgICAgPC9Qcm9kdWN0UHJvdmlkZXI+XG4gICAgICA8L0F1dGhQcm92aWRlcj5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgTXlBcHA7ICJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZVJvdXRlciIsIkF1dGhQcm92aWRlciIsIlByb2R1Y3RQcm92aWRlciIsIkNhcnRQcm92aWRlciIsIkJhbm5lclByb3ZpZGVyIiwicHJvZHVjdHMiLCJpbml0U2Nyb2xsQW5pbWF0aW9ucyIsInJlZnJlc2hBbmltYXRpb25zIiwiaW5pdGlhbGl6ZUxvY2FsU3RvcmFnZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJub3ciLCJEYXRlIiwidG9JU09TdHJpbmciLCJpbml0aWFsUHJvZHVjdHMiLCJtYXAiLCJwcm9kdWN0IiwiY3JlYXRlZEF0IiwidXBkYXRlZEF0Iiwic2V0SXRlbSIsIkpTT04iLCJzdHJpbmdpZnkiLCJjYXRlZ29yeUNvdW50cyIsImZvckVhY2giLCJjYXRlZ29yeSIsImNhdGVnb3JpZXMiLCJPYmplY3QiLCJlbnRyaWVzIiwiaWQiLCJjb3VudCIsIm5hbWUiLCJjaGFyQXQiLCJ0b1VwcGVyQ2FzZSIsInNsaWNlIiwiaW5pdGlhbEJhbm5lcnMiLCJwYWdlIiwiaW1hZ2VVcmwiLCJ0aXRsZSIsInN1YnRpdGxlIiwidGV4dENvbG9yIiwib3JkZXIiLCJNeUFwcCIsIkNvbXBvbmVudCIsInBhZ2VQcm9wcyIsIm1vdW50ZWQiLCJzZXRNb3VudGVkIiwicm91dGVyIiwib2JzZXJ2ZXIiLCJoYW5kbGVSb3V0ZUNoYW5nZSIsInNldFRpbWVvdXQiLCJldmVudHMiLCJvbiIsImRpc2Nvbm5lY3QiLCJvZmYiLCJkaXYiLCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmciLCJjbGFzc05hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/_app.tsx\n");

/***/ }),

/***/ "./utils/animation.ts":
/*!****************************!*\
  !*** ./utils/animation.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPulseAnimation: () => (/* binding */ addPulseAnimation),\n/* harmony export */   addStaggeredAnimations: () => (/* binding */ addStaggeredAnimations),\n/* harmony export */   initScrollAnimations: () => (/* binding */ initScrollAnimations),\n/* harmony export */   refreshAnimations: () => (/* binding */ refreshAnimations)\n/* harmony export */ });\n/**\r\n * Utility functions for animations throughout the website\r\n */ /**\r\n * Initializes scroll animations for elements with the 'animate-on-scroll' class\r\n * This function can be called after dynamic content is loaded\r\n */ const initScrollAnimations = ()=>{\n    if (false) {}\n    return null;\n};\n/**\r\n * Adds a pulse animation to an element\r\n * @param element The element to animate\r\n * @param duration Duration of the animation in milliseconds\r\n */ const addPulseAnimation = (element, duration = 1000)=>{\n    if (!element) return;\n    element.style.animation = `pulse ${duration}ms ease`;\n    // Remove animation after it completes\n    setTimeout(()=>{\n        element.style.animation = \"\";\n    }, duration);\n};\n/**\r\n * Adds staggered animations to a list of elements\r\n * @param elements NodeList or array of elements to animate\r\n * @param animationClass The CSS animation class to add\r\n * @param delayBetween Delay between each element's animation in milliseconds\r\n */ const addStaggeredAnimations = (elements, animationClass = \"fade-in\", delayBetween = 100)=>{\n    if (!elements || !elements.length) return;\n    Array.from(elements).forEach((element, index)=>{\n        const htmlElement = element;\n        setTimeout(()=>{\n            htmlElement.classList.add(animationClass);\n        }, index * delayBetween);\n    });\n};\n/**\r\n * Reinitializes animations on page navigation\r\n * Call this function when the route changes\r\n */ const refreshAnimations = ()=>{\n    if (false) {}\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9hbmltYXRpb24udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztDQUVDLEdBRUQ7OztDQUdDLEdBQ00sTUFBTUEsdUJBQXVCO0lBQ2xDLElBQUksS0FBa0IsRUFBYSxFQWdCbEM7SUFDRCxPQUFPO0FBQ1QsRUFBRTtBQUVGOzs7O0NBSUMsR0FDTSxNQUFNZ0Isb0JBQW9CLENBQUNGLFNBQXNCRyxXQUFXLElBQUk7SUFDckUsSUFBSSxDQUFDSCxTQUFTO0lBRWRBLFFBQVFJLEtBQUssQ0FBQ0MsU0FBUyxHQUFHLENBQUMsTUFBTSxFQUFFRixTQUFTLE9BQU8sQ0FBQztJQUVwRCxzQ0FBc0M7SUFDdENHLFdBQVc7UUFDVE4sUUFBUUksS0FBSyxDQUFDQyxTQUFTLEdBQUc7SUFDNUIsR0FBR0Y7QUFDTCxFQUFFO0FBRUY7Ozs7O0NBS0MsR0FDTSxNQUFNSSx5QkFBeUIsQ0FDcENDLFVBQ0FDLGlCQUFpQixTQUFTLEVBQzFCQyxlQUFlLEdBQUc7SUFFbEIsSUFBSSxDQUFDRixZQUFZLENBQUNBLFNBQVNHLE1BQU0sRUFBRTtJQUVuQ0MsTUFBTUMsSUFBSSxDQUFDTCxVQUFVZixPQUFPLENBQUMsQ0FBQ08sU0FBU2M7UUFDckMsTUFBTUMsY0FBY2Y7UUFDcEJNLFdBQVc7WUFDVFMsWUFBWWxCLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDVztRQUM1QixHQUFHSyxRQUFRSjtJQUNiO0FBQ0YsRUFBRTtBQUVGOzs7Q0FHQyxHQUNNLE1BQU1NLG9CQUFvQjtJQUMvQixJQUFJLEtBQWtCLEVBQWEsRUFhbEM7QUFDSCxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamVhbnMtbmV4dGpzLy4vdXRpbHMvYW5pbWF0aW9uLnRzPzIxMDEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIFV0aWxpdHkgZnVuY3Rpb25zIGZvciBhbmltYXRpb25zIHRocm91Z2hvdXQgdGhlIHdlYnNpdGVcclxuICovXHJcblxyXG4vKipcclxuICogSW5pdGlhbGl6ZXMgc2Nyb2xsIGFuaW1hdGlvbnMgZm9yIGVsZW1lbnRzIHdpdGggdGhlICdhbmltYXRlLW9uLXNjcm9sbCcgY2xhc3NcclxuICogVGhpcyBmdW5jdGlvbiBjYW4gYmUgY2FsbGVkIGFmdGVyIGR5bmFtaWMgY29udGVudCBpcyBsb2FkZWRcclxuICovXHJcbmV4cG9ydCBjb25zdCBpbml0U2Nyb2xsQW5pbWF0aW9ucyA9ICgpOiBJbnRlcnNlY3Rpb25PYnNlcnZlciB8IG51bGwgPT4ge1xyXG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgY29uc3QgYW5pbWF0ZU9uU2Nyb2xsRWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYW5pbWF0ZS1vbi1zY3JvbGwnKTtcclxuICAgIFxyXG4gICAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoKGVudHJpZXMpID0+IHtcclxuICAgICAgZW50cmllcy5mb3JFYWNoKGVudHJ5ID0+IHtcclxuICAgICAgICBpZiAoZW50cnkuaXNJbnRlcnNlY3RpbmcpIHtcclxuICAgICAgICAgIGVudHJ5LnRhcmdldC5jbGFzc0xpc3QuYWRkKCd2aXNpYmxlJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0sIHsgdGhyZXNob2xkOiAwLjEgfSk7XHJcbiAgICBcclxuICAgIGFuaW1hdGVPblNjcm9sbEVsZW1lbnRzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgIG9ic2VydmVyLm9ic2VydmUoZWxlbWVudCk7XHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgcmV0dXJuIG9ic2VydmVyO1xyXG4gIH1cclxuICByZXR1cm4gbnVsbDtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBBZGRzIGEgcHVsc2UgYW5pbWF0aW9uIHRvIGFuIGVsZW1lbnRcclxuICogQHBhcmFtIGVsZW1lbnQgVGhlIGVsZW1lbnQgdG8gYW5pbWF0ZVxyXG4gKiBAcGFyYW0gZHVyYXRpb24gRHVyYXRpb24gb2YgdGhlIGFuaW1hdGlvbiBpbiBtaWxsaXNlY29uZHNcclxuICovXHJcbmV4cG9ydCBjb25zdCBhZGRQdWxzZUFuaW1hdGlvbiA9IChlbGVtZW50OiBIVE1MRWxlbWVudCwgZHVyYXRpb24gPSAxMDAwKTogdm9pZCA9PiB7XHJcbiAgaWYgKCFlbGVtZW50KSByZXR1cm47XHJcbiAgXHJcbiAgZWxlbWVudC5zdHlsZS5hbmltYXRpb24gPSBgcHVsc2UgJHtkdXJhdGlvbn1tcyBlYXNlYDtcclxuICBcclxuICAvLyBSZW1vdmUgYW5pbWF0aW9uIGFmdGVyIGl0IGNvbXBsZXRlc1xyXG4gIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgZWxlbWVudC5zdHlsZS5hbmltYXRpb24gPSAnJztcclxuICB9LCBkdXJhdGlvbik7XHJcbn07XHJcblxyXG4vKipcclxuICogQWRkcyBzdGFnZ2VyZWQgYW5pbWF0aW9ucyB0byBhIGxpc3Qgb2YgZWxlbWVudHNcclxuICogQHBhcmFtIGVsZW1lbnRzIE5vZGVMaXN0IG9yIGFycmF5IG9mIGVsZW1lbnRzIHRvIGFuaW1hdGVcclxuICogQHBhcmFtIGFuaW1hdGlvbkNsYXNzIFRoZSBDU1MgYW5pbWF0aW9uIGNsYXNzIHRvIGFkZFxyXG4gKiBAcGFyYW0gZGVsYXlCZXR3ZWVuIERlbGF5IGJldHdlZW4gZWFjaCBlbGVtZW50J3MgYW5pbWF0aW9uIGluIG1pbGxpc2Vjb25kc1xyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGFkZFN0YWdnZXJlZEFuaW1hdGlvbnMgPSAoXHJcbiAgZWxlbWVudHM6IE5vZGVMaXN0T2Y8RWxlbWVudD4gfCBIVE1MRWxlbWVudFtdLFxyXG4gIGFuaW1hdGlvbkNsYXNzID0gJ2ZhZGUtaW4nLFxyXG4gIGRlbGF5QmV0d2VlbiA9IDEwMFxyXG4pOiB2b2lkID0+IHtcclxuICBpZiAoIWVsZW1lbnRzIHx8ICFlbGVtZW50cy5sZW5ndGgpIHJldHVybjtcclxuICBcclxuICBBcnJheS5mcm9tKGVsZW1lbnRzKS5mb3JFYWNoKChlbGVtZW50LCBpbmRleCkgPT4ge1xyXG4gICAgY29uc3QgaHRtbEVsZW1lbnQgPSBlbGVtZW50IGFzIEhUTUxFbGVtZW50O1xyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgIGh0bWxFbGVtZW50LmNsYXNzTGlzdC5hZGQoYW5pbWF0aW9uQ2xhc3MpO1xyXG4gICAgfSwgaW5kZXggKiBkZWxheUJldHdlZW4pO1xyXG4gIH0pO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIFJlaW5pdGlhbGl6ZXMgYW5pbWF0aW9ucyBvbiBwYWdlIG5hdmlnYXRpb25cclxuICogQ2FsbCB0aGlzIGZ1bmN0aW9uIHdoZW4gdGhlIHJvdXRlIGNoYW5nZXNcclxuICovXHJcbmV4cG9ydCBjb25zdCByZWZyZXNoQW5pbWF0aW9ucyA9ICgpOiB2b2lkID0+IHtcclxuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgIC8vIFJlc2V0IGFueSBleGlzdGluZyBhbmltYXRpb25zXHJcbiAgICBjb25zdCBhbmltYXRlZEVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2NsYXNzKj1cImZhZGUtXCJdLCBbY2xhc3MqPVwic2NhbGUtXCJdJyk7XHJcbiAgICBhbmltYXRlZEVsZW1lbnRzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgIC8vIEZvcmNlIGEgcmVmbG93IHRvIHJlc3RhcnQgYW5pbWF0aW9uc1xyXG4gICAgICBlbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ3Zpc2libGUnKTtcclxuICAgICAgLy8gQ2FzdCB0byBIVE1MRWxlbWVudCB0byBhY2Nlc3Mgb2Zmc2V0V2lkdGhcclxuICAgICAgdm9pZCAoZWxlbWVudCBhcyBIVE1MRWxlbWVudCkub2Zmc2V0V2lkdGg7IC8vIFRyaWdnZXIgcmVmbG93XHJcbiAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgndmlzaWJsZScpO1xyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIC8vIFJlaW5pdGlhbGl6ZSBzY3JvbGwgYW5pbWF0aW9uc1xyXG4gICAgaW5pdFNjcm9sbEFuaW1hdGlvbnMoKTtcclxuICB9XHJcbn07ICJdLCJuYW1lcyI6WyJpbml0U2Nyb2xsQW5pbWF0aW9ucyIsImFuaW1hdGVPblNjcm9sbEVsZW1lbnRzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwib2JzZXJ2ZXIiLCJJbnRlcnNlY3Rpb25PYnNlcnZlciIsImVudHJpZXMiLCJmb3JFYWNoIiwiZW50cnkiLCJpc0ludGVyc2VjdGluZyIsInRhcmdldCIsImNsYXNzTGlzdCIsImFkZCIsInRocmVzaG9sZCIsImVsZW1lbnQiLCJvYnNlcnZlIiwiYWRkUHVsc2VBbmltYXRpb24iLCJkdXJhdGlvbiIsInN0eWxlIiwiYW5pbWF0aW9uIiwic2V0VGltZW91dCIsImFkZFN0YWdnZXJlZEFuaW1hdGlvbnMiLCJlbGVtZW50cyIsImFuaW1hdGlvbkNsYXNzIiwiZGVsYXlCZXR3ZWVuIiwibGVuZ3RoIiwiQXJyYXkiLCJmcm9tIiwiaW5kZXgiLCJodG1sRWxlbWVudCIsInJlZnJlc2hBbmltYXRpb25zIiwiYW5pbWF0ZWRFbGVtZW50cyIsInJlbW92ZSIsIm9mZnNldFdpZHRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./utils/animation.ts\n");

/***/ }),

/***/ "./utils/auth.ts":
/*!***********************!*\
  !*** ./utils/auth.ts ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCurrentUser: () => (/* binding */ getCurrentUser),\n/* harmony export */   isAuthenticated: () => (/* binding */ isAuthenticated),\n/* harmony export */   login: () => (/* binding */ login),\n/* harmony export */   logout: () => (/* binding */ logout),\n/* harmony export */   register: () => (/* binding */ register)\n/* harmony export */ });\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./firebase */ \"./utils/firebase.ts\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/auth */ \"firebase/auth\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_firebase__WEBPACK_IMPORTED_MODULE_0__, firebase_auth__WEBPACK_IMPORTED_MODULE_1__]);\n([_firebase__WEBPACK_IMPORTED_MODULE_0__, firebase_auth__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.getAuth)(_firebase__WEBPACK_IMPORTED_MODULE_0__.app);\nconst STORAGE_KEY = \"nikhilsJeansAuthToken\";\nconst getCurrentUser = ()=>{\n    if (true) return null;\n    // Instead of storing the full user object, we now rely on Firebase's auth state\n    const currentUser = auth.currentUser;\n    if (!currentUser) return null;\n    return {\n        id: currentUser.uid,\n        name: currentUser.displayName || currentUser.email?.split(\"@\")[0] || \"User\",\n        email: currentUser.email || \"\",\n        emailVerified: currentUser.emailVerified\n    };\n};\nconst isAuthenticated = ()=>{\n    if (true) return false;\n    // Check if user is authenticated with Firebase\n    return !!auth.currentUser;\n};\nconst login = async (email, password)=>{\n    try {\n        // Use Firebase authentication\n        const userCredential = await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.signInWithEmailAndPassword)(auth, email, password);\n        const firebaseUser = userCredential.user;\n        // Store only the auth token in localStorage for persistence\n        const token = await firebaseUser.getIdToken();\n        localStorage.setItem(STORAGE_KEY, token);\n        // Check if email is verified\n        if (!firebaseUser.emailVerified) {\n            // Create user object for the app\n            const user = {\n                id: firebaseUser.uid,\n                name: firebaseUser.displayName || email.split(\"@\")[0],\n                email: firebaseUser.email || email,\n                emailVerified: false\n            };\n            return {\n                success: true,\n                message: \"Login successful, but please verify your email\",\n                user,\n                emailVerified: false\n            };\n        }\n        // Create user object for the app\n        const user = {\n            id: firebaseUser.uid,\n            name: firebaseUser.displayName || email.split(\"@\")[0],\n            email: firebaseUser.email || email,\n            emailVerified: true\n        };\n        return {\n            success: true,\n            message: \"Login successful\",\n            user,\n            emailVerified: true\n        };\n    } catch (error) {\n        console.error(\"Login error:\", error);\n        let message = \"An error occurred during login\";\n        // Parse Firebase error messages\n        if (error.code === \"auth/user-not-found\") {\n            message = \"No user found with this email\";\n        } else if (error.code === \"auth/wrong-password\") {\n            message = \"Invalid password\";\n        } else if (error.code === \"auth/invalid-email\") {\n            message = \"Invalid email address\";\n        } else if (error.code === \"auth/user-disabled\") {\n            message = \"This account has been disabled\";\n        } else if (error.code === \"auth/network-request-failed\") {\n            message = \"Network error. Please check your connection.\";\n        }\n        return {\n            success: false,\n            message\n        };\n    }\n};\nconst register = async (name, email, password)=>{\n    try {\n        // Use Firebase authentication\n        const userCredential = await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.createUserWithEmailAndPassword)(auth, email, password);\n        const firebaseUser = userCredential.user;\n        // Send email verification\n        await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.sendEmailVerification)(firebaseUser);\n        // Store only the auth token in localStorage for persistence\n        const token = await firebaseUser.getIdToken();\n        localStorage.setItem(STORAGE_KEY, token);\n        // Create user object\n        const user = {\n            id: firebaseUser.uid,\n            name: name || email.split(\"@\")[0],\n            email: firebaseUser.email || email,\n            emailVerified: false\n        };\n        return {\n            success: true,\n            message: \"Registration successful. Please check your email to verify your account.\",\n            user,\n            emailVerificationSent: true\n        };\n    } catch (error) {\n        console.error(\"Registration error:\", error);\n        let message = \"An error occurred during registration\";\n        // Parse Firebase error messages\n        if (error.code === \"auth/email-already-in-use\") {\n            message = \"User with this email already exists\";\n        } else if (error.code === \"auth/invalid-email\") {\n            message = \"Invalid email address\";\n        } else if (error.code === \"auth/weak-password\") {\n            message = \"Password is too weak\";\n        } else if (error.code === \"auth/network-request-failed\") {\n            message = \"Network error. Please check your connection.\";\n        }\n        return {\n            success: false,\n            message\n        };\n    }\n};\nconst logout = async ()=>{\n    try {\n        await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_1__.signOut)(auth);\n        // Clear the auth token from localStorage\n        localStorage.removeItem(STORAGE_KEY);\n        return {\n            success: true,\n            message: \"Logout successful\"\n        };\n    } catch (error) {\n        console.error(\"Logout error:\", error);\n        return {\n            success: false,\n            message: \"An error occurred during logout\"\n        };\n    }\n};\n// Set up auth state listener\nif (false) {}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/auth.ts\n");

/***/ }),

/***/ "./utils/firebase.ts":
/*!***************************!*\
  !*** ./utils/firebase.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analytics: () => (/* binding */ analytics),\n/* harmony export */   app: () => (/* binding */ app),\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   storage: () => (/* binding */ storage)\n/* harmony export */ });\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ \"firebase/app\");\n/* harmony import */ var firebase_analytics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/analytics */ \"firebase/analytics\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/firestore */ \"firebase/firestore\");\n/* harmony import */ var firebase_storage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/storage */ \"firebase/storage\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([firebase_app__WEBPACK_IMPORTED_MODULE_0__, firebase_analytics__WEBPACK_IMPORTED_MODULE_1__, firebase_firestore__WEBPACK_IMPORTED_MODULE_2__, firebase_storage__WEBPACK_IMPORTED_MODULE_3__]);\n([firebase_app__WEBPACK_IMPORTED_MODULE_0__, firebase_analytics__WEBPACK_IMPORTED_MODULE_1__, firebase_firestore__WEBPACK_IMPORTED_MODULE_2__, firebase_storage__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// Import the functions you need from the SDKs you need\n\n\n\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD_spb43jww6Pl9OFpIOMzg2LFrH-VbasQ\",\n    authDomain: \"nikhils-jeans-website.firebaseapp.com\",\n    projectId: \"nikhils-jeans-website\",\n    storageBucket: \"nikhils-jeans-website.appspot.com\",\n    messagingSenderId: \"89588207516\",\n    appId: \"1:89588207516:web:0cfbe407bb6d7cc8764259\",\n    measurementId: \"G-ZHMF1GS857\"\n};\n// Initialize Firebase - check if already initialized\nconst app = !(0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)().length ? (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)(firebaseConfig) : (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApp)();\n// Initialize Analytics only on client side\nconst analytics =  false ? 0 : null;\n// Initialize Firestore\nconst db =  false ? 0 : null;\n// Initialize Storage\nconst storage =  false ? 0 : null;\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9maXJlYmFzZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBLHVEQUF1RDtBQUNPO0FBQ1o7QUFDQTtBQUNKO0FBQzlDLDREQUE0RDtBQUM1RCxpRUFBaUU7QUFFakUsd0NBQXdDO0FBQ3hDLG1FQUFtRTtBQUNuRSxNQUFNTSxpQkFBaUI7SUFDckJDLFFBQVE7SUFDUkMsWUFBWTtJQUNaQyxXQUFXO0lBQ1hDLGVBQWU7SUFDZkMsbUJBQW1CO0lBQ25CQyxPQUFPO0lBQ1BDLGVBQWU7QUFDakI7QUFFQSxxREFBcUQ7QUFDckQsTUFBTUMsTUFBTSxDQUFDYixxREFBT0EsR0FBR2MsTUFBTSxHQUFHZiwyREFBYUEsQ0FBQ00sa0JBQWtCSixvREFBTUE7QUFFdEUsMkNBQTJDO0FBQzNDLE1BQU1jLFlBQVksTUFBa0IsR0FBY2IsQ0FBaUJXLEdBQUc7QUFFdEUsdUJBQXVCO0FBQ3ZCLE1BQU1HLEtBQUssTUFBa0IsR0FBY2IsQ0FBaUJVLEdBQUc7QUFFL0QscUJBQXFCO0FBQ3JCLE1BQU1JLFVBQVUsTUFBa0IsR0FBY2IsQ0FBZVMsR0FBRztBQUUzQiIsInNvdXJjZXMiOlsid2VicGFjazovL2plYW5zLW5leHRqcy8uL3V0aWxzL2ZpcmViYXNlLnRzPzU2MDMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0IHRoZSBmdW5jdGlvbnMgeW91IG5lZWQgZnJvbSB0aGUgU0RLcyB5b3UgbmVlZFxuaW1wb3J0IHsgaW5pdGlhbGl6ZUFwcCwgZ2V0QXBwcywgZ2V0QXBwIH0gZnJvbSBcImZpcmViYXNlL2FwcFwiO1xuaW1wb3J0IHsgZ2V0QW5hbHl0aWNzIH0gZnJvbSBcImZpcmViYXNlL2FuYWx5dGljc1wiO1xuaW1wb3J0IHsgZ2V0RmlyZXN0b3JlIH0gZnJvbSBcImZpcmViYXNlL2ZpcmVzdG9yZVwiO1xuaW1wb3J0IHsgZ2V0U3RvcmFnZSB9IGZyb20gXCJmaXJlYmFzZS9zdG9yYWdlXCI7XG4vLyBUT0RPOiBBZGQgU0RLcyBmb3IgRmlyZWJhc2UgcHJvZHVjdHMgdGhhdCB5b3Ugd2FudCB0byB1c2Vcbi8vIGh0dHBzOi8vZmlyZWJhc2UuZ29vZ2xlLmNvbS9kb2NzL3dlYi9zZXR1cCNhdmFpbGFibGUtbGlicmFyaWVzXG5cbi8vIFlvdXIgd2ViIGFwcCdzIEZpcmViYXNlIGNvbmZpZ3VyYXRpb25cbi8vIEZvciBGaXJlYmFzZSBKUyBTREsgdjcuMjAuMCBhbmQgbGF0ZXIsIG1lYXN1cmVtZW50SWQgaXMgb3B0aW9uYWxcbmNvbnN0IGZpcmViYXNlQ29uZmlnID0ge1xuICBhcGlLZXk6IFwiQUl6YVN5RF9zcGI0M2p3dzZQbDlPRnBJT016ZzJMRnJILVZiYXNRXCIsXG4gIGF1dGhEb21haW46IFwibmlraGlscy1qZWFucy13ZWJzaXRlLmZpcmViYXNlYXBwLmNvbVwiLFxuICBwcm9qZWN0SWQ6IFwibmlraGlscy1qZWFucy13ZWJzaXRlXCIsXG4gIHN0b3JhZ2VCdWNrZXQ6IFwibmlraGlscy1qZWFucy13ZWJzaXRlLmFwcHNwb3QuY29tXCIsXG4gIG1lc3NhZ2luZ1NlbmRlcklkOiBcIjg5NTg4MjA3NTE2XCIsXG4gIGFwcElkOiBcIjE6ODk1ODgyMDc1MTY6d2ViOjBjZmJlNDA3YmI2ZDdjYzg3NjQyNTlcIixcbiAgbWVhc3VyZW1lbnRJZDogXCJHLVpITUYxR1M4NTdcIlxufTtcblxuLy8gSW5pdGlhbGl6ZSBGaXJlYmFzZSAtIGNoZWNrIGlmIGFscmVhZHkgaW5pdGlhbGl6ZWRcbmNvbnN0IGFwcCA9ICFnZXRBcHBzKCkubGVuZ3RoID8gaW5pdGlhbGl6ZUFwcChmaXJlYmFzZUNvbmZpZykgOiBnZXRBcHAoKTtcblxuLy8gSW5pdGlhbGl6ZSBBbmFseXRpY3Mgb25seSBvbiBjbGllbnQgc2lkZVxuY29uc3QgYW5hbHl0aWNzID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyBnZXRBbmFseXRpY3MoYXBwKSA6IG51bGw7XG5cbi8vIEluaXRpYWxpemUgRmlyZXN0b3JlXG5jb25zdCBkYiA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gZ2V0RmlyZXN0b3JlKGFwcCkgOiBudWxsO1xuXG4vLyBJbml0aWFsaXplIFN0b3JhZ2VcbmNvbnN0IHN0b3JhZ2UgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IGdldFN0b3JhZ2UoYXBwKSA6IG51bGw7XG5cbmV4cG9ydCB7IGFwcCwgYW5hbHl0aWNzLCBkYiwgc3RvcmFnZSB9OyAiXSwibmFtZXMiOlsiaW5pdGlhbGl6ZUFwcCIsImdldEFwcHMiLCJnZXRBcHAiLCJnZXRBbmFseXRpY3MiLCJnZXRGaXJlc3RvcmUiLCJnZXRTdG9yYWdlIiwiZmlyZWJhc2VDb25maWciLCJhcGlLZXkiLCJhdXRoRG9tYWluIiwicHJvamVjdElkIiwic3RvcmFnZUJ1Y2tldCIsIm1lc3NhZ2luZ1NlbmRlcklkIiwiYXBwSWQiLCJtZWFzdXJlbWVudElkIiwiYXBwIiwibGVuZ3RoIiwiYW5hbHl0aWNzIiwiZGIiLCJzdG9yYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./utils/firebase.ts\n");

/***/ }),

/***/ "./utils/firebaseBanners.ts":
/*!**********************************!*\
  !*** ./utils/firebaseBanners.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addBanner: () => (/* binding */ addBanner),\n/* harmony export */   deleteBanner: () => (/* binding */ deleteBanner),\n/* harmony export */   getAllBanners: () => (/* binding */ getAllBanners),\n/* harmony export */   getBannersByPage: () => (/* binding */ getBannersByPage),\n/* harmony export */   updateBanner: () => (/* binding */ updateBanner)\n/* harmony export */ });\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./firebase */ \"./utils/firebase.ts\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/firestore */ \"firebase/firestore\");\n/* harmony import */ var _firebaseStorage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./firebaseStorage */ \"./utils/firebaseStorage.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_firebase__WEBPACK_IMPORTED_MODULE_0__, firebase_firestore__WEBPACK_IMPORTED_MODULE_1__, _firebaseStorage__WEBPACK_IMPORTED_MODULE_2__]);\n([_firebase__WEBPACK_IMPORTED_MODULE_0__, firebase_firestore__WEBPACK_IMPORTED_MODULE_1__, _firebaseStorage__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n// Get Firestore instance - use the imported db or initialize a new one if it's null\nconst getDb = ()=>{\n    if (_firebase__WEBPACK_IMPORTED_MODULE_0__.db) return _firebase__WEBPACK_IMPORTED_MODULE_0__.db;\n    return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getFirestore)(_firebase__WEBPACK_IMPORTED_MODULE_0__.app);\n};\n// Collection reference - create it when needed\nconst getBannersCollection = ()=>{\n    return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.collection)(getDb(), \"banners\");\n};\n// Get all banners\nconst getAllBanners = async ()=>{\n    try {\n        const bannersCollection = getBannersCollection();\n        const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDocs)(bannersCollection);\n        return snapshot.docs.map((doc)=>({\n                id: doc.id,\n                ...doc.data()\n            }));\n    } catch (error) {\n        console.error(\"Error getting banners from Firestore:\", error);\n        throw new Error(\"Failed to fetch banners\");\n    }\n};\n// Get banners by page\nconst getBannersByPage = async (page)=>{\n    try {\n        const bannersCollection = getBannersCollection();\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.query)(bannersCollection, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.where)(\"page\", \"==\", page));\n        const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDocs)(q);\n        return snapshot.docs.map((doc)=>({\n                id: doc.id,\n                ...doc.data()\n            }));\n    } catch (error) {\n        console.error(`Error getting ${page} banners:`, error);\n        throw new Error(`Failed to fetch ${page} banners`);\n    }\n};\n// Add a new banner\nconst addBanner = async (banner)=>{\n    try {\n        // Check if a banner already exists for this page\n        const existingBanners = await getBannersByPage(banner.page);\n        // If a banner exists for this page, delete it first\n        if (existingBanners.length > 0) {\n            const existingBanner = existingBanners[0];\n            await deleteBanner(existingBanner.id);\n        }\n        // Add timestamps\n        const bannerWithTimestamps = {\n            ...banner,\n            createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)(),\n            updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)()\n        };\n        // Add to Firestore\n        const bannersCollection = getBannersCollection();\n        const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.addDoc)(bannersCollection, bannerWithTimestamps);\n        // Return the new banner with ID\n        return {\n            id: docRef.id,\n            ...bannerWithTimestamps\n        };\n    } catch (error) {\n        console.error(\"Error adding banner to Firestore:\", error);\n        throw error;\n    }\n};\n// Update a banner\nconst updateBanner = async (id, updates)=>{\n    try {\n        const bannerRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(getDb(), \"banners\", id);\n        // Get the current banner data\n        const bannerSnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDoc)(bannerRef);\n        if (!bannerSnapshot.exists()) {\n            throw new Error(\"Banner not found\");\n        }\n        // Add updated timestamp\n        const updatesWithTimestamp = {\n            ...updates,\n            updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)()\n        };\n        // If imageUrl is being updated, delete the old image\n        if (updates.imageUrl) {\n            const currentBanner = bannerSnapshot.data();\n            if (currentBanner.imageUrl && currentBanner.imageUrl !== updates.imageUrl) {\n                try {\n                    await (0,_firebaseStorage__WEBPACK_IMPORTED_MODULE_2__.deleteBannerImage)(currentBanner.imageUrl);\n                } catch (error) {\n                    console.error(\"Error deleting old banner image:\", error);\n                // Continue with the update even if image deletion fails\n                }\n            }\n        }\n        // Update in Firestore\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.updateDoc)(bannerRef, updatesWithTimestamp);\n    } catch (error) {\n        console.error(\"Error updating banner in Firestore:\", error);\n        throw error;\n    }\n};\n// Delete a banner\nconst deleteBanner = async (id)=>{\n    try {\n        const bannerRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(getDb(), \"banners\", id);\n        // Get the banner data to access the image URL\n        const bannerSnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDoc)(bannerRef);\n        if (!bannerSnapshot.exists()) {\n            throw new Error(\"Banner not found\");\n        }\n        const bannerData = bannerSnapshot.data();\n        // Delete the banner document from Firestore\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.deleteDoc)(bannerRef);\n        // Delete the banner image from Storage\n        if (bannerData.imageUrl) {\n            try {\n                await (0,_firebaseStorage__WEBPACK_IMPORTED_MODULE_2__.deleteBannerImage)(bannerData.imageUrl);\n            } catch (error) {\n                console.error(\"Error deleting banner image:\", error);\n            // We've already deleted the banner document, so just log the error\n            }\n        }\n    } catch (error) {\n        console.error(\"Error deleting banner from Firestore:\", error);\n        throw error;\n    }\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/firebaseBanners.ts\n");

/***/ }),

/***/ "./utils/firebaseStorage.ts":
/*!**********************************!*\
  !*** ./utils/firebaseStorage.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteBannerImage: () => (/* binding */ deleteBannerImage),\n/* harmony export */   uploadBannerImage: () => (/* binding */ uploadBannerImage)\n/* harmony export */ });\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./firebase */ \"./utils/firebase.ts\");\n/* harmony import */ var firebase_storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/storage */ \"firebase/storage\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_firebase__WEBPACK_IMPORTED_MODULE_0__, firebase_storage__WEBPACK_IMPORTED_MODULE_1__]);\n([_firebase__WEBPACK_IMPORTED_MODULE_0__, firebase_storage__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n// Ensure we have a valid storage instance\nconst getStorageInstance = ()=>{\n    if (_firebase__WEBPACK_IMPORTED_MODULE_0__.storage === null) {\n        return (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.getStorage)(_firebase__WEBPACK_IMPORTED_MODULE_0__.app);\n    }\n    return _firebase__WEBPACK_IMPORTED_MODULE_0__.storage;\n};\n// Upload banner image to Firebase Storage\nconst uploadBannerImage = async (file)=>{\n    try {\n        // Check file size (limit to 5MB)\n        if (file.size > 5 * 1024 * 1024) {\n            throw new Error(\"Image file is too large. Please select an image smaller than 5MB.\");\n        }\n        const storageInstance = getStorageInstance();\n        // Create a unique filename\n        const timestamp = new Date().getTime();\n        const fileName = `banner_${timestamp}_${file.name.replace(/[^a-zA-Z0-9.]/g, \"_\")}`;\n        // Create a reference to the file in storage\n        const storageRef = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.ref)(storageInstance, `banner_images/${fileName}`);\n        // Upload the file\n        await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.uploadBytes)(storageRef, file);\n        // Get the download URL\n        const downloadURL = await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.getDownloadURL)(storageRef);\n        return downloadURL;\n    } catch (error) {\n        console.error(\"Error uploading banner image:\", error);\n        if (error instanceof Error) {\n            throw error;\n        } else {\n            throw new Error(\"Failed to upload banner image. Please try again.\");\n        }\n    }\n};\n// Delete banner image from Firebase Storage\nconst deleteBannerImage = async (imageUrl)=>{\n    try {\n        const storageInstance = getStorageInstance();\n        // Extract the file path from the URL\n        // Firebase Storage URLs contain a token after the file path, so we need to extract just the path\n        const decodedUrl = decodeURIComponent(imageUrl);\n        const startIndex = decodedUrl.indexOf(\"banner_images\");\n        if (startIndex === -1) {\n            console.warn(\"Not a Firebase Storage URL or not in banner_images folder:\", imageUrl);\n            return;\n        }\n        const endIndex = decodedUrl.indexOf(\"?\", startIndex);\n        const filePath = endIndex !== -1 ? decodedUrl.substring(startIndex, endIndex) : decodedUrl.substring(startIndex);\n        // Create a reference to the file\n        const imageRef = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.ref)(storageInstance, filePath);\n        // Delete the file\n        await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.deleteObject)(imageRef);\n        console.log(\"Banner image deleted successfully:\", filePath);\n    } catch (error) {\n        console.error(\"Error deleting banner image:\", error);\n        throw new Error(\"Failed to delete banner image\");\n    }\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9maXJlYmFzZVN0b3JhZ2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFxQztBQUN5RDtBQUM3RDtBQUVqQywwQ0FBMEM7QUFDMUMsTUFBTU8scUJBQXFCO0lBQ3pCLElBQUlQLDhDQUFPQSxLQUFLLE1BQU07UUFDcEIsT0FBT0ssNERBQVVBLENBQUNDLDBDQUFHQTtJQUN2QjtJQUNBLE9BQU9OLDhDQUFPQTtBQUNoQjtBQUVBLDBDQUEwQztBQUNuQyxNQUFNUSxvQkFBb0IsT0FBT0M7SUFDdEMsSUFBSTtRQUNGLGlDQUFpQztRQUNqQyxJQUFJQSxLQUFLQyxJQUFJLEdBQUcsSUFBSSxPQUFPLE1BQU07WUFDL0IsTUFBTSxJQUFJQyxNQUFNO1FBQ2xCO1FBRUEsTUFBTUMsa0JBQWtCTDtRQUV4QiwyQkFBMkI7UUFDM0IsTUFBTU0sWUFBWSxJQUFJQyxPQUFPQyxPQUFPO1FBQ3BDLE1BQU1DLFdBQVcsQ0FBQyxPQUFPLEVBQUVILFVBQVUsQ0FBQyxFQUFFSixLQUFLUSxJQUFJLENBQUNDLE9BQU8sQ0FBQyxrQkFBa0IsS0FBSyxDQUFDO1FBRWxGLDRDQUE0QztRQUM1QyxNQUFNQyxhQUFhbEIscURBQUdBLENBQUNXLGlCQUFpQixDQUFDLGNBQWMsRUFBRUksU0FBUyxDQUFDO1FBRW5FLGtCQUFrQjtRQUNsQixNQUFNZCw2REFBV0EsQ0FBQ2lCLFlBQVlWO1FBRTlCLHVCQUF1QjtRQUN2QixNQUFNVyxjQUFjLE1BQU1qQixnRUFBY0EsQ0FBQ2dCO1FBQ3pDLE9BQU9DO0lBQ1QsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxpQ0FBaUNBO1FBQy9DLElBQUlBLGlCQUFpQlYsT0FBTztZQUMxQixNQUFNVTtRQUNSLE9BQU87WUFDTCxNQUFNLElBQUlWLE1BQU07UUFDbEI7SUFDRjtBQUNGLEVBQUU7QUFFRiw0Q0FBNEM7QUFDckMsTUFBTVksb0JBQW9CLE9BQU9DO0lBQ3RDLElBQUk7UUFDRixNQUFNWixrQkFBa0JMO1FBRXhCLHFDQUFxQztRQUNyQyxpR0FBaUc7UUFDakcsTUFBTWtCLGFBQWFDLG1CQUFtQkY7UUFDdEMsTUFBTUcsYUFBYUYsV0FBV0csT0FBTyxDQUFDO1FBRXRDLElBQUlELGVBQWUsQ0FBQyxHQUFHO1lBQ3JCTCxRQUFRTyxJQUFJLENBQUMsOERBQThETDtZQUMzRTtRQUNGO1FBRUEsTUFBTU0sV0FBV0wsV0FBV0csT0FBTyxDQUFDLEtBQUtEO1FBQ3pDLE1BQU1JLFdBQVdELGFBQWEsQ0FBQyxJQUMzQkwsV0FBV08sU0FBUyxDQUFDTCxZQUFZRyxZQUNqQ0wsV0FBV08sU0FBUyxDQUFDTDtRQUV6QixpQ0FBaUM7UUFDakMsTUFBTU0sV0FBV2hDLHFEQUFHQSxDQUFDVyxpQkFBaUJtQjtRQUV0QyxrQkFBa0I7UUFDbEIsTUFBTTNCLDhEQUFZQSxDQUFDNkI7UUFDbkJYLFFBQVFZLEdBQUcsQ0FBQyxzQ0FBc0NIO0lBQ3BELEVBQUUsT0FBT1YsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsZ0NBQWdDQTtRQUM5QyxNQUFNLElBQUlWLE1BQU07SUFDbEI7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamVhbnMtbmV4dGpzLy4vdXRpbHMvZmlyZWJhc2VTdG9yYWdlLnRzP2M2ODIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RvcmFnZSB9IGZyb20gJy4vZmlyZWJhc2UnO1xyXG5pbXBvcnQgeyByZWYsIHVwbG9hZEJ5dGVzLCBnZXREb3dubG9hZFVSTCwgZGVsZXRlT2JqZWN0LCBnZXRTdG9yYWdlIH0gZnJvbSAnZmlyZWJhc2Uvc3RvcmFnZSc7XHJcbmltcG9ydCB7IGFwcCB9IGZyb20gJy4vZmlyZWJhc2UnO1xyXG5cclxuLy8gRW5zdXJlIHdlIGhhdmUgYSB2YWxpZCBzdG9yYWdlIGluc3RhbmNlXHJcbmNvbnN0IGdldFN0b3JhZ2VJbnN0YW5jZSA9ICgpID0+IHtcclxuICBpZiAoc3RvcmFnZSA9PT0gbnVsbCkge1xyXG4gICAgcmV0dXJuIGdldFN0b3JhZ2UoYXBwKTtcclxuICB9XHJcbiAgcmV0dXJuIHN0b3JhZ2U7XHJcbn07XHJcblxyXG4vLyBVcGxvYWQgYmFubmVyIGltYWdlIHRvIEZpcmViYXNlIFN0b3JhZ2VcclxuZXhwb3J0IGNvbnN0IHVwbG9hZEJhbm5lckltYWdlID0gYXN5bmMgKGZpbGU6IEZpbGUpOiBQcm9taXNlPHN0cmluZz4gPT4ge1xyXG4gIHRyeSB7XHJcbiAgICAvLyBDaGVjayBmaWxlIHNpemUgKGxpbWl0IHRvIDVNQilcclxuICAgIGlmIChmaWxlLnNpemUgPiA1ICogMTAyNCAqIDEwMjQpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbWFnZSBmaWxlIGlzIHRvbyBsYXJnZS4gUGxlYXNlIHNlbGVjdCBhbiBpbWFnZSBzbWFsbGVyIHRoYW4gNU1CLicpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjb25zdCBzdG9yYWdlSW5zdGFuY2UgPSBnZXRTdG9yYWdlSW5zdGFuY2UoKTtcclxuICAgIFxyXG4gICAgLy8gQ3JlYXRlIGEgdW5pcXVlIGZpbGVuYW1lXHJcbiAgICBjb25zdCB0aW1lc3RhbXAgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcclxuICAgIGNvbnN0IGZpbGVOYW1lID0gYGJhbm5lcl8ke3RpbWVzdGFtcH1fJHtmaWxlLm5hbWUucmVwbGFjZSgvW15hLXpBLVowLTkuXS9nLCAnXycpfWA7XHJcbiAgICBcclxuICAgIC8vIENyZWF0ZSBhIHJlZmVyZW5jZSB0byB0aGUgZmlsZSBpbiBzdG9yYWdlXHJcbiAgICBjb25zdCBzdG9yYWdlUmVmID0gcmVmKHN0b3JhZ2VJbnN0YW5jZSwgYGJhbm5lcl9pbWFnZXMvJHtmaWxlTmFtZX1gKTtcclxuICAgIFxyXG4gICAgLy8gVXBsb2FkIHRoZSBmaWxlXHJcbiAgICBhd2FpdCB1cGxvYWRCeXRlcyhzdG9yYWdlUmVmLCBmaWxlKTtcclxuICAgIFxyXG4gICAgLy8gR2V0IHRoZSBkb3dubG9hZCBVUkxcclxuICAgIGNvbnN0IGRvd25sb2FkVVJMID0gYXdhaXQgZ2V0RG93bmxvYWRVUkwoc3RvcmFnZVJlZik7XHJcbiAgICByZXR1cm4gZG93bmxvYWRVUkw7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHVwbG9hZGluZyBiYW5uZXIgaW1hZ2U6JywgZXJyb3IpO1xyXG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byB1cGxvYWQgYmFubmVyIGltYWdlLiBQbGVhc2UgdHJ5IGFnYWluLicpO1xyXG4gICAgfVxyXG4gIH1cclxufTtcclxuXHJcbi8vIERlbGV0ZSBiYW5uZXIgaW1hZ2UgZnJvbSBGaXJlYmFzZSBTdG9yYWdlXHJcbmV4cG9ydCBjb25zdCBkZWxldGVCYW5uZXJJbWFnZSA9IGFzeW5jIChpbWFnZVVybDogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHN0b3JhZ2VJbnN0YW5jZSA9IGdldFN0b3JhZ2VJbnN0YW5jZSgpO1xyXG4gICAgXHJcbiAgICAvLyBFeHRyYWN0IHRoZSBmaWxlIHBhdGggZnJvbSB0aGUgVVJMXHJcbiAgICAvLyBGaXJlYmFzZSBTdG9yYWdlIFVSTHMgY29udGFpbiBhIHRva2VuIGFmdGVyIHRoZSBmaWxlIHBhdGgsIHNvIHdlIG5lZWQgdG8gZXh0cmFjdCBqdXN0IHRoZSBwYXRoXHJcbiAgICBjb25zdCBkZWNvZGVkVXJsID0gZGVjb2RlVVJJQ29tcG9uZW50KGltYWdlVXJsKTtcclxuICAgIGNvbnN0IHN0YXJ0SW5kZXggPSBkZWNvZGVkVXJsLmluZGV4T2YoJ2Jhbm5lcl9pbWFnZXMnKTtcclxuICAgIFxyXG4gICAgaWYgKHN0YXJ0SW5kZXggPT09IC0xKSB7XHJcbiAgICAgIGNvbnNvbGUud2FybignTm90IGEgRmlyZWJhc2UgU3RvcmFnZSBVUkwgb3Igbm90IGluIGJhbm5lcl9pbWFnZXMgZm9sZGVyOicsIGltYWdlVXJsKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjb25zdCBlbmRJbmRleCA9IGRlY29kZWRVcmwuaW5kZXhPZignPycsIHN0YXJ0SW5kZXgpO1xyXG4gICAgY29uc3QgZmlsZVBhdGggPSBlbmRJbmRleCAhPT0gLTEgXHJcbiAgICAgID8gZGVjb2RlZFVybC5zdWJzdHJpbmcoc3RhcnRJbmRleCwgZW5kSW5kZXgpIFxyXG4gICAgICA6IGRlY29kZWRVcmwuc3Vic3RyaW5nKHN0YXJ0SW5kZXgpO1xyXG4gICAgXHJcbiAgICAvLyBDcmVhdGUgYSByZWZlcmVuY2UgdG8gdGhlIGZpbGVcclxuICAgIGNvbnN0IGltYWdlUmVmID0gcmVmKHN0b3JhZ2VJbnN0YW5jZSwgZmlsZVBhdGgpO1xyXG4gICAgXHJcbiAgICAvLyBEZWxldGUgdGhlIGZpbGVcclxuICAgIGF3YWl0IGRlbGV0ZU9iamVjdChpbWFnZVJlZik7XHJcbiAgICBjb25zb2xlLmxvZygnQmFubmVyIGltYWdlIGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5OicsIGZpbGVQYXRoKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZGVsZXRpbmcgYmFubmVyIGltYWdlOicsIGVycm9yKTtcclxuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGRlbGV0ZSBiYW5uZXIgaW1hZ2UnKTtcclxuICB9XHJcbn07ICJdLCJuYW1lcyI6WyJzdG9yYWdlIiwicmVmIiwidXBsb2FkQnl0ZXMiLCJnZXREb3dubG9hZFVSTCIsImRlbGV0ZU9iamVjdCIsImdldFN0b3JhZ2UiLCJhcHAiLCJnZXRTdG9yYWdlSW5zdGFuY2UiLCJ1cGxvYWRCYW5uZXJJbWFnZSIsImZpbGUiLCJzaXplIiwiRXJyb3IiLCJzdG9yYWdlSW5zdGFuY2UiLCJ0aW1lc3RhbXAiLCJEYXRlIiwiZ2V0VGltZSIsImZpbGVOYW1lIiwibmFtZSIsInJlcGxhY2UiLCJzdG9yYWdlUmVmIiwiZG93bmxvYWRVUkwiLCJlcnJvciIsImNvbnNvbGUiLCJkZWxldGVCYW5uZXJJbWFnZSIsImltYWdlVXJsIiwiZGVjb2RlZFVybCIsImRlY29kZVVSSUNvbXBvbmVudCIsInN0YXJ0SW5kZXgiLCJpbmRleE9mIiwid2FybiIsImVuZEluZGV4IiwiZmlsZVBhdGgiLCJzdWJzdHJpbmciLCJpbWFnZVJlZiIsImxvZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./utils/firebaseStorage.ts\n");

/***/ }),

/***/ "./utils/firestore.ts":
/*!****************************!*\
  !*** ./utils/firestore.ts ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addProduct: () => (/* binding */ addProduct),\n/* harmony export */   clearProductCache: () => (/* binding */ clearProductCache),\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   deleteProduct: () => (/* binding */ deleteProduct),\n/* harmony export */   deleteProductImage: () => (/* binding */ deleteProductImage),\n/* harmony export */   getAllCategories: () => (/* binding */ getAllCategories),\n/* harmony export */   getAllProducts: () => (/* binding */ getAllProducts),\n/* harmony export */   getFeaturedProducts: () => (/* binding */ getFeaturedProducts),\n/* harmony export */   getImageById: () => (/* binding */ getImageById),\n/* harmony export */   getNewArrivals: () => (/* binding */ getNewArrivals),\n/* harmony export */   getNextProductsPage: () => (/* binding */ getNextProductsPage),\n/* harmony export */   getProductById: () => (/* binding */ getProductById),\n/* harmony export */   getProductsByCategory: () => (/* binding */ getProductsByCategory),\n/* harmony export */   storage: () => (/* binding */ storage),\n/* harmony export */   updateProduct: () => (/* binding */ updateProduct),\n/* harmony export */   uploadProductImage: () => (/* binding */ uploadProductImage)\n/* harmony export */ });\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./firebase */ \"./utils/firebase.ts\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/firestore */ \"firebase/firestore\");\n/* harmony import */ var firebase_storage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/storage */ \"firebase/storage\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_firebase__WEBPACK_IMPORTED_MODULE_0__, firebase_firestore__WEBPACK_IMPORTED_MODULE_1__, firebase_storage__WEBPACK_IMPORTED_MODULE_2__]);\n([_firebase__WEBPACK_IMPORTED_MODULE_0__, firebase_firestore__WEBPACK_IMPORTED_MODULE_1__, firebase_storage__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n// Initialize Firestore\nconst db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getFirestore)(_firebase__WEBPACK_IMPORTED_MODULE_0__.app);\n// Initialize Storage\nconst storage = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_2__.getStorage)(_firebase__WEBPACK_IMPORTED_MODULE_0__.app);\n// Collection references\nconst productsCollection = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.collection)(db, \"products\");\nconst categoriesCollection = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.collection)(db, \"categories\");\n// Cache for products\nconst productCache = {\n    all: null,\n    byId: {},\n    byCategory: {},\n    lastFetched: 0\n};\n// Cache expiration time (5 minutes)\nconst CACHE_EXPIRATION = 5 * 60 * 1000;\n// Validate product data before saving\nconst validateProduct = (product)=>{\n    if (!product.name || typeof product.name !== \"string\") {\n        return \"Product name is required\";\n    }\n    if (!product.price || isNaN(Number(product.price))) {\n        return \"Valid product price is required\";\n    }\n    if (!product.category || typeof product.category !== \"string\") {\n        return \"Product category is required\";\n    }\n    if (!product.image || typeof product.image !== \"string\") {\n        return \"Product image is required\";\n    }\n    return null; // No errors\n};\n// Clean product data for Firestore\nconst cleanProductData = (product)=>{\n    const cleanedProduct = {};\n    Object.entries(product).forEach(([key, value])=>{\n        if (value !== undefined && value !== null) {\n            // Handle specific field types\n            if (key === \"price\" || key === \"originalPrice\" || key === \"stock\") {\n                cleanedProduct[key] = Number(value);\n            } else if (key === \"sizes\" && typeof value === \"string\") {\n                cleanedProduct[key] = value.split(\",\").map((s)=>s.trim()).filter(Boolean);\n            } else if (key === \"featured\" && typeof value === \"string\") {\n                cleanedProduct[key] = value === \"true\";\n            } else {\n                cleanedProduct[key] = value;\n            }\n        }\n    });\n    // Add timestamps\n    if (!cleanedProduct.createdAt) {\n        cleanedProduct.createdAt = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)();\n    }\n    cleanedProduct.updatedAt = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)();\n    return cleanedProduct;\n};\n// Check if cache is valid\nconst isCacheValid = ()=>{\n    return productCache.all !== null && Date.now() - productCache.lastFetched < CACHE_EXPIRATION;\n};\n// Get all products with pagination and caching\nconst getAllProducts = async (pageSize = 0)=>{\n    try {\n        // If cache is valid and we're not paginating, return cached products\n        if (isCacheValid() && pageSize === 0 && productCache.all) {\n            console.log(`Returning ${productCache.all.length} products from cache`);\n            return productCache.all;\n        }\n        console.log(\"Cache invalid or empty, fetching products from Firestore...\");\n        let productsQuery = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.query)(productsCollection, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.orderBy)(\"createdAt\", \"desc\"));\n        // Apply pagination if pageSize is specified\n        if (pageSize > 0) {\n            productsQuery = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.query)(productsQuery, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.limit)(pageSize));\n        }\n        console.log(\"Executing Firestore query...\");\n        const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDocs)(productsQuery);\n        console.log(`Raw Firestore query returned ${snapshot.docs.length} documents`);\n        const products = snapshot.docs.map((doc)=>{\n            const data = doc.data();\n            // Log each product for debugging\n            console.log(`Processing product: ${doc.id} - ${data.name || \"Unnamed product\"}`);\n            return {\n                id: doc.id,\n                ...data\n            };\n        });\n        // Update cache if we're getting all products\n        if (pageSize === 0) {\n            productCache.all = products;\n            // Update byId and byCategory caches\n            products.forEach((product)=>{\n                productCache.byId[product.id] = product;\n                if (product.category) {\n                    if (!productCache.byCategory[product.category]) {\n                        productCache.byCategory[product.category] = [];\n                    }\n                    productCache.byCategory[product.category].push(product);\n                }\n            });\n            productCache.lastFetched = Date.now();\n        }\n        console.log(`Successfully processed and returning ${products.length} products from Firestore`);\n        return products;\n    } catch (error) {\n        console.error(\"Error getting products from Firestore:\", error);\n        throw new Error(\"Failed to fetch products\");\n    }\n};\n// Get next page of products\nconst getNextProductsPage = async (lastVisible, pageSize = 20)=>{\n    try {\n        const productsQuery = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.query)(productsCollection, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.orderBy)(\"createdAt\", \"desc\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.startAfter)(lastVisible), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.limit)(pageSize));\n        const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDocs)(productsQuery);\n        const products = snapshot.docs.map((doc)=>({\n                id: doc.id,\n                ...doc.data()\n            }));\n        // Update cache for these products\n        products.forEach((product)=>{\n            productCache.byId[product.id] = product;\n            if (product.category) {\n                if (!productCache.byCategory[product.category]) {\n                    productCache.byCategory[product.category] = [];\n                }\n                // Check if product already exists in category cache\n                const existingIndex = productCache.byCategory[product.category].findIndex((p)=>p.id === product.id);\n                if (existingIndex >= 0) {\n                    productCache.byCategory[product.category][existingIndex] = product;\n                } else {\n                    productCache.byCategory[product.category].push(product);\n                }\n            }\n        });\n        return products;\n    } catch (error) {\n        console.error(\"Error getting next page of products:\", error);\n        throw new Error(\"Failed to fetch more products\");\n    }\n};\n// Get products by category with caching\nconst getProductsByCategory = async (category)=>{\n    try {\n        // Check if we have this category in cache and it's still valid\n        if (isCacheValid() && productCache.byCategory[category] && productCache.byCategory[category].length > 0) {\n            console.log(`Returning ${category} products from cache`);\n            return productCache.byCategory[category];\n        }\n        console.log(`Fetching ${category} products from Firestore`);\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.query)(productsCollection, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.where)(\"category\", \"==\", category));\n        const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDocs)(q);\n        const products = snapshot.docs.map((doc)=>({\n                id: doc.id,\n                ...doc.data()\n            }));\n        // Update cache\n        productCache.byCategory[category] = products;\n        // Also update byId cache\n        products.forEach((product)=>{\n            productCache.byId[product.id] = product;\n        });\n        return products;\n    } catch (error) {\n        console.error(`Error getting ${category} products:`, error);\n        throw new Error(`Failed to fetch ${category} products`);\n    }\n};\n// Get featured products with caching\nconst getFeaturedProducts = async (limitCount = 8)=>{\n    try {\n        // If we have all products cached, filter them\n        if (isCacheValid() && productCache.all) {\n            const featured = productCache.all.filter((p)=>p.featured).slice(0, limitCount);\n            if (featured.length > 0) {\n                console.log(\"Returning featured products from cache\");\n                return featured;\n            }\n        }\n        console.log(\"Fetching featured products from Firestore\");\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.query)(productsCollection, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.where)(\"featured\", \"==\", true), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.orderBy)(\"createdAt\", \"desc\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.limit)(limitCount));\n        const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDocs)(q);\n        const products = snapshot.docs.map((doc)=>({\n                id: doc.id,\n                ...doc.data()\n            }));\n        // Update byId cache\n        products.forEach((product)=>{\n            productCache.byId[product.id] = product;\n            // Update category cache if needed\n            if (product.category) {\n                if (!productCache.byCategory[product.category]) {\n                    productCache.byCategory[product.category] = [];\n                }\n                // Check if product already exists in category cache\n                const existingIndex = productCache.byCategory[product.category].findIndex((p)=>p.id === product.id);\n                if (existingIndex >= 0) {\n                    productCache.byCategory[product.category][existingIndex] = product;\n                } else {\n                    productCache.byCategory[product.category].push(product);\n                }\n            }\n        });\n        return products;\n    } catch (error) {\n        console.error(\"Error getting featured products:\", error);\n        throw new Error(\"Failed to fetch featured products\");\n    }\n};\n// Get new arrivals with caching\nconst getNewArrivals = async (limitCount = 8)=>{\n    try {\n        // If we have all products cached, filter them\n        if (isCacheValid() && productCache.all) {\n            const newArrivals = productCache.all.filter((p)=>p.new).slice(0, limitCount);\n            if (newArrivals.length > 0) {\n                console.log(\"Returning new arrivals from cache\");\n                return newArrivals;\n            }\n        }\n        console.log(\"Fetching new arrivals from Firestore\");\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.query)(productsCollection, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.where)(\"new\", \"==\", true), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.orderBy)(\"createdAt\", \"desc\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.limit)(limitCount));\n        const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDocs)(q);\n        const products = snapshot.docs.map((doc)=>({\n                id: doc.id,\n                ...doc.data()\n            }));\n        // Update byId cache\n        products.forEach((product)=>{\n            productCache.byId[product.id] = product;\n            // Update category cache if needed\n            if (product.category) {\n                if (!productCache.byCategory[product.category]) {\n                    productCache.byCategory[product.category] = [];\n                }\n                // Check if product already exists in category cache\n                const existingIndex = productCache.byCategory[product.category].findIndex((p)=>p.id === product.id);\n                if (existingIndex >= 0) {\n                    productCache.byCategory[product.category][existingIndex] = product;\n                } else {\n                    productCache.byCategory[product.category].push(product);\n                }\n            }\n        });\n        return products;\n    } catch (error) {\n        console.error(\"Error getting new arrivals:\", error);\n        throw new Error(\"Failed to fetch new arrivals\");\n    }\n};\n// Get product by ID with caching\nconst getProductById = async (id)=>{\n    try {\n        // Check if product is in cache\n        if (productCache.byId[id]) {\n            console.log(`Returning product ${id} from cache`);\n            return productCache.byId[id];\n        }\n        console.log(`Fetching product ${id} from Firestore`);\n        const productDoc = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(db, \"products\", id);\n        const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDoc)(productDoc);\n        if (snapshot.exists()) {\n            const product = {\n                id: snapshot.id,\n                ...snapshot.data()\n            };\n            // Update cache\n            productCache.byId[id] = product;\n            return product;\n        }\n        return null;\n    } catch (error) {\n        console.error(\"Error getting product:\", error);\n        throw new Error(\"Failed to fetch product details\");\n    }\n};\n// Clear cache for a specific product\nconst invalidateProductCache = (productId, categoryId)=>{\n    // Remove from byId cache\n    if (productCache.byId[productId]) {\n        delete productCache.byId[productId];\n    }\n    // Remove from category cache if category is provided\n    if (categoryId && productCache.byCategory[categoryId]) {\n        productCache.byCategory[categoryId] = productCache.byCategory[categoryId].filter((p)=>p.id !== productId);\n    }\n    // Set all cache to null to force refresh on next fetch\n    productCache.all = null;\n};\n// Clear entire cache\nconst clearProductCache = ()=>{\n    productCache.all = null;\n    productCache.byId = {};\n    productCache.byCategory = {};\n    productCache.lastFetched = 0;\n};\n// Ensure we have a valid storage instance\nconst getStorageInstance = ()=>{\n    const storage =  false ? 0 : null;\n    if (storage === null) {\n        return (0,firebase_storage__WEBPACK_IMPORTED_MODULE_2__.getStorage)(_firebase__WEBPACK_IMPORTED_MODULE_0__.app);\n    }\n    return storage;\n};\n// Upload image to Firebase Storage\nconst uploadProductImage = async (file)=>{\n    try {\n        // Check file size (limit to 5MB)\n        if (file.size > 5 * 1024 * 1024) {\n            throw new Error(\"Image file is too large. Please select an image smaller than 5MB.\");\n        }\n        // Convert file to base64\n        const base64String = await fileToBase64(file);\n        // Create a unique ID for the image\n        const timestamp = new Date().getTime();\n        const fileName = `product_${timestamp}_${file.name.replace(/[^a-zA-Z0-9.]/g, \"_\")}`;\n        // Store the base64 image in Firestore\n        const imageCollection = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.collection)(db, \"images\");\n        const imageDoc = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.addDoc)(imageCollection, {\n            name: fileName,\n            type: file.type,\n            base64: base64String,\n            createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)()\n        });\n        // Return the document ID as the image URL\n        return `base64://${imageDoc.id}`;\n    } catch (error) {\n        console.error(\"Error uploading image:\", error);\n        if (error instanceof Error) {\n            throw error;\n        } else {\n            throw new Error(\"Failed to upload product image. Please try again.\");\n        }\n    }\n};\n// Helper function to convert File to base64\nconst fileToBase64 = (file)=>{\n    return new Promise((resolve, reject)=>{\n        try {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = ()=>{\n                if (typeof reader.result === \"string\") {\n                    resolve(reader.result);\n                } else {\n                    reject(new Error(\"Failed to read image file\"));\n                }\n            };\n            reader.onerror = ()=>{\n                reject(new Error(\"Error reading image file. Please try a different image.\"));\n            };\n        } catch (error) {\n            reject(error instanceof Error ? error : new Error(\"Unknown error processing image\"));\n        }\n    });\n};\n// Get image by ID\nconst getImageById = async (imageId)=>{\n    try {\n        console.log(`Fetching image with ID: ${imageId}`);\n        const imageDoc = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(db, \"images\", imageId);\n        const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDoc)(imageDoc);\n        if (snapshot.exists()) {\n            const data = snapshot.data();\n            if (!data || !data.base64) {\n                console.error(`Image exists but has no base64 data. ID: ${imageId}`);\n                return \"/images/placeholder.jpg\";\n            }\n            console.log(`Successfully retrieved base64 image. ID: ${imageId}`);\n            return data.base64;\n        }\n        console.error(`Image not found with ID: ${imageId}`);\n        return \"/images/placeholder.jpg\";\n    } catch (error) {\n        console.error(\"Error getting image:\", error);\n        // Return a placeholder instead of throwing, to prevent UI breaking\n        return \"/images/placeholder.jpg\";\n    }\n};\n// Delete product image from Firestore\nconst deleteProductImage = async (imageUrl)=>{\n    try {\n        // Check if it's a base64 image\n        if (imageUrl.startsWith(\"base64://\")) {\n            const imageId = imageUrl.replace(\"base64://\", \"\");\n            const imageDoc = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(db, \"images\", imageId);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.deleteDoc)(imageDoc);\n            console.log(\"Product image deleted successfully from Firestore:\", imageId);\n            return;\n        }\n        // Handle legacy Storage URLs\n        const storage = getStorageInstance();\n        // Extract the file path from the URL\n        const decodedUrl = decodeURIComponent(imageUrl);\n        const startIndex = decodedUrl.indexOf(\"product_images\");\n        if (startIndex === -1) {\n            console.warn(\"Not a Firebase Storage URL or not in product_images folder:\", imageUrl);\n            return;\n        }\n        const endIndex = decodedUrl.indexOf(\"?\", startIndex);\n        const filePath = endIndex !== -1 ? decodedUrl.substring(startIndex, endIndex) : decodedUrl.substring(startIndex);\n        // Create a reference to the file\n        const imageRef = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_2__.ref)(storage, filePath);\n        // Delete the file\n        await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_2__.deleteObject)(imageRef);\n        console.log(\"Product image deleted successfully from Storage:\", filePath);\n    } catch (error) {\n        console.error(\"Error deleting product image:\", error);\n    // Don't throw error here, as we want to continue with product deletion\n    // even if image deletion fails\n    }\n};\n// Add a new product with transaction for category tracking\nconst addProduct = async (product)=>{\n    try {\n        console.log(\"Adding product to Firestore:\", product);\n        // Validate product data\n        const validationError = validateProduct(product);\n        if (validationError) {\n            throw new Error(validationError);\n        }\n        // Clean the product data for Firestore\n        const cleanedProduct = cleanProductData(product);\n        console.log(\"Cleaned product data for Firestore:\", cleanedProduct);\n        // Use transaction to add product and update category data\n        const newProduct = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.runTransaction)(db, async (transaction)=>{\n            // Add the product document\n            const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.addDoc)(productsCollection, cleanedProduct);\n            const newProductWithId = {\n                id: docRef.id,\n                ...cleanedProduct\n            };\n            // Update or create category count\n            const categoryRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(categoriesCollection, cleanedProduct.category);\n            const categoryDoc = await transaction.get(categoryRef);\n            if (categoryDoc.exists()) {\n                // Update existing category\n                transaction.update(categoryRef, {\n                    count: (categoryDoc.data().count || 0) + 1,\n                    updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)()\n                });\n            } else {\n                // Create new category\n                transaction.set(categoryRef, {\n                    id: cleanedProduct.category,\n                    name: cleanedProduct.category.charAt(0).toUpperCase() + cleanedProduct.category.slice(1),\n                    count: 1,\n                    createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)(),\n                    updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)()\n                });\n            }\n            return newProductWithId;\n        });\n        // Update cache with the new product\n        if (productCache.all) {\n            productCache.all.unshift(newProduct);\n        }\n        productCache.byId[newProduct.id] = newProduct;\n        if (newProduct.category) {\n            if (!productCache.byCategory[newProduct.category]) {\n                productCache.byCategory[newProduct.category] = [];\n            }\n            productCache.byCategory[newProduct.category].unshift(newProduct);\n        }\n        console.log(\"Product added successfully with ID:\", newProduct.id);\n        return newProduct;\n    } catch (error) {\n        console.error(\"Error adding product to Firestore:\", error);\n        throw error;\n    }\n};\n// Update a product\nconst updateProduct = async (id, product)=>{\n    try {\n        const productDoc = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(db, \"products\", id);\n        // Get existing product to check if category is changing\n        const existingProductSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDoc)(productDoc);\n        if (!existingProductSnap.exists()) {\n            throw new Error(\"Product not found\");\n        }\n        const existingProduct = existingProductSnap.data();\n        const cleanedUpdates = cleanProductData(product);\n        // Always update the timestamp when modified\n        cleanedUpdates.updatedAt = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)();\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.runTransaction)(db, async (transaction)=>{\n            // Update product document\n            transaction.update(productDoc, cleanedUpdates);\n            // If category changed, update both old and new category counts\n            if (product.category && existingProduct.category !== product.category) {\n                // Decrease old category count\n                const oldCategoryRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(categoriesCollection, existingProduct.category);\n                const oldCategoryDoc = await transaction.get(oldCategoryRef);\n                if (oldCategoryDoc.exists()) {\n                    const oldCount = oldCategoryDoc.data().count || 0;\n                    if (oldCount > 1) {\n                        transaction.update(oldCategoryRef, {\n                            count: oldCount - 1,\n                            updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)()\n                        });\n                    } else {\n                        // Delete category if it will be empty\n                        transaction.delete(oldCategoryRef);\n                    }\n                }\n                // Increase new category count\n                const newCategoryRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(categoriesCollection, product.category);\n                const newCategoryDoc = await transaction.get(newCategoryRef);\n                if (newCategoryDoc.exists()) {\n                    transaction.update(newCategoryRef, {\n                        count: (newCategoryDoc.data().count || 0) + 1,\n                        updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)()\n                    });\n                } else {\n                    transaction.set(newCategoryRef, {\n                        id: product.category,\n                        name: product.category.charAt(0).toUpperCase() + product.category.slice(1),\n                        count: 1,\n                        createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)(),\n                        updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)()\n                    });\n                }\n            }\n        });\n        // Update cache\n        if (productCache.byId[id]) {\n            const updatedProduct = {\n                ...productCache.byId[id],\n                ...product\n            };\n            productCache.byId[id] = updatedProduct;\n            // Update in all products cache if it exists\n            if (productCache.all) {\n                const index = productCache.all.findIndex((p)=>p.id === id);\n                if (index >= 0) {\n                    productCache.all[index] = updatedProduct;\n                }\n            }\n            // Handle category change in cache\n            if (product.category && existingProduct.category !== product.category) {\n                // Remove from old category cache\n                if (productCache.byCategory[existingProduct.category]) {\n                    productCache.byCategory[existingProduct.category] = productCache.byCategory[existingProduct.category].filter((p)=>p.id !== id);\n                }\n                // Add to new category cache\n                if (!productCache.byCategory[product.category]) {\n                    productCache.byCategory[product.category] = [];\n                }\n                productCache.byCategory[product.category].push(updatedProduct);\n            } else if (product.category) {\n                // Update in same category\n                if (productCache.byCategory[product.category]) {\n                    const catIndex = productCache.byCategory[product.category].findIndex((p)=>p.id === id);\n                    if (catIndex >= 0) {\n                        productCache.byCategory[product.category][catIndex] = updatedProduct;\n                    }\n                }\n            }\n        } else {\n            // If not in cache, invalidate all cache to force refresh\n            clearProductCache();\n        }\n    } catch (error) {\n        console.error(\"Error updating product:\", error);\n        throw new Error(\"Failed to update product\");\n    }\n};\n// Delete a product\nconst deleteProduct = async (id)=>{\n    try {\n        const productDoc = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(db, \"products\", id);\n        // Get product to find its category and image URL\n        const productSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDoc)(productDoc);\n        if (!productSnap.exists()) {\n            throw new Error(\"Product not found\");\n        }\n        const productData = productSnap.data();\n        // Try to delete the product image first\n        if (productData.image) {\n            try {\n                await deleteProductImage(productData.image);\n            } catch (error) {\n                console.error(\"Error deleting product image:\", error);\n            // Continue with product deletion even if image deletion fails\n            }\n        }\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.runTransaction)(db, async (transaction)=>{\n            // Delete product\n            transaction.delete(productDoc);\n            // Update category count\n            if (productData.category) {\n                const categoryRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.doc)(categoriesCollection, productData.category);\n                const categoryDoc = await transaction.get(categoryRef);\n                if (categoryDoc.exists()) {\n                    const count = categoryDoc.data().count || 0;\n                    if (count > 1) {\n                        transaction.update(categoryRef, {\n                            count: count - 1,\n                            updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.serverTimestamp)()\n                        });\n                    } else {\n                        // Delete category if it will be empty\n                        transaction.delete(categoryRef);\n                    }\n                }\n            }\n        });\n        // Update cache\n        invalidateProductCache(id, productData.category);\n    } catch (error) {\n        console.error(\"Error deleting product:\", error);\n        throw new Error(\"Failed to delete product\");\n    }\n};\n// Get all categories with product counts\nconst getAllCategories = async ()=>{\n    try {\n        const snapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDocs)(categoriesCollection);\n        return snapshot.docs.map((doc)=>doc.data());\n    } catch (error) {\n        console.error(\"Error getting categories:\", error);\n        throw new Error(\"Failed to fetch categories\");\n    }\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/firestore.ts\n");

/***/ }),

/***/ "./styles/MobileEnhancements.css":
/*!***************************************!*\
  !*** ./styles/MobileEnhancements.css ***!
  \***************************************/
/***/ (() => {



/***/ }),

/***/ "./styles/animations.css":
/*!*******************************!*\
  !*** ./styles/animations.css ***!
  \*******************************/
/***/ (() => {



/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "next/dist/compiled/next-server/pages.runtime.dev.js":
/*!**********************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages.runtime.dev.js" ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/pages.runtime.dev.js");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-dom":
/*!****************************!*\
  !*** external "react-dom" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-dom");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "react/jsx-runtime":
/*!************************************!*\
  !*** external "react/jsx-runtime" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-runtime");

/***/ }),

/***/ "firebase/analytics":
/*!*************************************!*\
  !*** external "firebase/analytics" ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = import("firebase/analytics");;

/***/ }),

/***/ "firebase/app":
/*!*******************************!*\
  !*** external "firebase/app" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = import("firebase/app");;

/***/ }),

/***/ "firebase/auth":
/*!********************************!*\
  !*** external "firebase/auth" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = import("firebase/auth");;

/***/ }),

/***/ "firebase/firestore":
/*!*************************************!*\
  !*** external "firebase/firestore" ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = import("firebase/firestore");;

/***/ }),

/***/ "firebase/storage":
/*!***********************************!*\
  !*** external "firebase/storage" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = import("firebase/storage");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc"], () => (__webpack_exec__("./pages/_app.tsx")));
module.exports = __webpack_exports__;

})();