"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./context/ProductContext.tsx":
/*!************************************!*\
  !*** ./context/ProductContext.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProductProvider: function() { return /* binding */ ProductProvider; },\n/* harmony export */   useProducts: function() { return /* binding */ useProducts; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/firestore */ \"./utils/firestore.ts\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst ProductContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst useProducts = ()=>{\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ProductContext);\n    if (!context) {\n        throw new Error(\"useProducts must be used within a ProductProvider\");\n    }\n    return context;\n};\n_s(useProducts, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst ProductProvider = (param)=>{\n    let { children } = param;\n    _s1();\n    const [products, setProducts] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [categories, setCategories] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [productsByCategory, setProductsByCategory] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Organize products by category\n    const organizeProductsByCategory = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((allProducts)=>{\n        const byCategory = {};\n        allProducts.forEach((product)=>{\n            if (!product.category) return;\n            if (!byCategory[product.category]) {\n                byCategory[product.category] = [];\n            }\n            byCategory[product.category].push(product);\n        });\n        setProductsByCategory(byCategory);\n    }, []);\n    // Fetch all products from Firestore\n    const fetchProducts = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        try {\n            setLoading(true);\n            setError(null);\n            // Clear product cache to ensure fresh data\n            await _utils_firestore__WEBPACK_IMPORTED_MODULE_2__.clearProductCache();\n            // Get data from Firestore\n            console.log(\"Fetching products from Firestore in ProductContext\");\n            const fetchedProducts = await _utils_firestore__WEBPACK_IMPORTED_MODULE_2__.getAllProducts();\n            console.log(\"Fetched \".concat(fetchedProducts.length, \" products from Firestore\"));\n            // Get categories from Firestore\n            // This is handled automatically by the Firestore API\n            setProducts(fetchedProducts);\n            organizeProductsByCategory(fetchedProducts);\n        } catch (err) {\n            console.error(\"Error fetching products:\", err);\n            setError(err.message || \"Failed to load products. Please try again later.\");\n        } finally{\n            setLoading(false);\n        }\n    }, [\n        organizeProductsByCategory\n    ]);\n    // Load products on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        fetchProducts();\n    }, [\n        fetchProducts\n    ]);\n    // Get products in a specific category\n    const getProductsInCategory = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((category)=>{\n        return productsByCategory[category] || [];\n    }, [\n        productsByCategory\n    ]);\n    // Add a new product\n    const addNewProduct = async (product)=>{\n        try {\n            setError(null);\n            // Ensure product has required fields\n            if (!product.category) {\n                throw new Error(\"Product category is required\");\n            }\n            // Add product to Firestore\n            const newProduct = await _utils_firestore__WEBPACK_IMPORTED_MODULE_2__.addProduct(product);\n            // Update local state\n            setProducts((prevProducts)=>[\n                    ...prevProducts,\n                    newProduct\n                ]);\n            // Update category cache\n            setProductsByCategory((prev)=>{\n                const updated = {\n                    ...prev\n                };\n                const category = product.category;\n                if (!updated[category]) {\n                    updated[category] = [];\n                }\n                updated[category] = [\n                    ...updated[category],\n                    newProduct\n                ];\n                return updated;\n            });\n            return newProduct;\n        } catch (err) {\n            console.error(\"Error adding product:\", err);\n            setError(err.message || \"Failed to add product\");\n            throw err;\n        }\n    };\n    // Update an existing product\n    const updateExistingProduct = async (id, updates)=>{\n        try {\n            setError(null);\n            // Find the existing product to check for category changes\n            const existingProduct = products.find((p)=>p.id === id);\n            if (!existingProduct) {\n                throw new Error(\"Product not found\");\n            }\n            // Update in Firestore\n            await _utils_firestore__WEBPACK_IMPORTED_MODULE_2__.updateProduct(id, updates);\n            // Get the updated product\n            const updatedProduct = {\n                ...existingProduct,\n                ...updates\n            };\n            // Update local state\n            setProducts((prevProducts)=>prevProducts.map((p)=>p.id === id ? updatedProduct : p));\n            // Handle category change if needed\n            if (updates.category && existingProduct.category !== updates.category) {\n                // Refetch products to ensure they're up to date\n                await fetchProducts();\n            } else {\n                // Just update the product in its existing category\n                setProductsByCategory((prev)=>{\n                    const category = existingProduct.category;\n                    if (category && prev[category]) {\n                        return {\n                            ...prev,\n                            [category]: prev[category].map((p)=>p.id === id ? updatedProduct : p)\n                        };\n                    }\n                    return prev;\n                });\n            }\n        } catch (err) {\n            console.error(\"Error updating product:\", err);\n            setError(err.message || \"Failed to update product\");\n            throw err;\n        }\n    };\n    // Remove a product\n    const removeProduct = async (id)=>{\n        try {\n            setError(null);\n            // Find the product to get its category\n            const productToRemove = products.find((p)=>p.id === id);\n            if (!productToRemove) {\n                throw new Error(\"Product not found\");\n            }\n            // Delete from Firestore\n            await _utils_firestore__WEBPACK_IMPORTED_MODULE_2__.deleteProduct(id);\n            // Update local state\n            setProducts((prevProducts)=>prevProducts.filter((p)=>p.id !== id));\n            // Update category cache\n            if (productToRemove.category) {\n                setProductsByCategory((prev)=>{\n                    const updated = {\n                        ...prev\n                    };\n                    if (updated[productToRemove.category]) {\n                        updated[productToRemove.category] = updated[productToRemove.category].filter((p)=>p.id !== id);\n                        // Remove category array if empty\n                        if (updated[productToRemove.category].length === 0) {\n                            delete updated[productToRemove.category];\n                        }\n                    }\n                    return updated;\n                });\n            }\n        } catch (err) {\n            console.error(\"Error removing product:\", err);\n            setError(err.message || \"Failed to delete product\");\n            throw err;\n        }\n    };\n    // Upload an image to Firebase Storage\n    const uploadImage = async (file)=>{\n        try {\n            setError(null);\n            return await _utils_firestore__WEBPACK_IMPORTED_MODULE_2__.uploadProductImage(file);\n        } catch (err) {\n            console.error(\"Error uploading image:\", err);\n            setError(err.message || \"Failed to upload image\");\n            throw err;\n        }\n    };\n    // Manual refresh function\n    const refreshProducts = async ()=>{\n        await fetchProducts();\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ProductContext.Provider, {\n        value: {\n            products,\n            categories,\n            productsByCategory,\n            loading,\n            error,\n            addNewProduct,\n            updateExistingProduct,\n            removeProduct,\n            uploadImage,\n            refreshProducts,\n            getProductsInCategory\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Projects\\\\Freelansing websites\\\\rangya-master\\\\context\\\\ProductContext.tsx\",\n        lineNumber: 235,\n        columnNumber: 5\n    }, undefined);\n};\n_s1(ProductProvider, \"dNCeWSqA52/VNPCqWEXHWbkh33o=\");\n_c = ProductProvider;\nvar _c;\n$RefreshReg$(_c, \"ProductProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./context/ProductContext.tsx\n"));

/***/ })

});